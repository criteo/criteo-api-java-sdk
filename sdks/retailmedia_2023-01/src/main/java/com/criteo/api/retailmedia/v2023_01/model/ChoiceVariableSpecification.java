/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: 2023-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.v2023_01.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.retailmedia.v2023_01.model.ChoiceOption;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Specification of choice variable
 */
@ApiModel(description = "Specification of choice variable")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ChoiceVariableSpecification {
  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<ChoiceOption> options = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_SELECTED = "maxSelected";
  @SerializedName(SERIALIZED_NAME_MAX_SELECTED)
  private Integer maxSelected;

  public static final String SERIALIZED_NAME_MIN_SELECTED = "minSelected";
  @SerializedName(SERIALIZED_NAME_MIN_SELECTED)
  private Integer minSelected;


  public ChoiceVariableSpecification options(List<ChoiceOption> options) {
    
    this.options = options;
    return this;
  }

  public ChoiceVariableSpecification addOptionsItem(ChoiceOption optionsItem) {
    this.options.add(optionsItem);
    return this;
  }

   /**
   * The available options
   * @return options
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The available options")

  public List<ChoiceOption> getOptions() {
    return options;
  }


  public void setOptions(List<ChoiceOption> options) {
    this.options = options;
  }


  public ChoiceVariableSpecification maxSelected(Integer maxSelected) {
    
    this.maxSelected = maxSelected;
    return this;
  }

   /**
   * The maximum number of selectable options
   * @return maxSelected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of selectable options")

  public Integer getMaxSelected() {
    return maxSelected;
  }


  public void setMaxSelected(Integer maxSelected) {
    this.maxSelected = maxSelected;
  }


  public ChoiceVariableSpecification minSelected(Integer minSelected) {
    
    this.minSelected = minSelected;
    return this;
  }

   /**
   * The minimum number of selectable options
   * @return minSelected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum number of selectable options")

  public Integer getMinSelected() {
    return minSelected;
  }


  public void setMinSelected(Integer minSelected) {
    this.minSelected = minSelected;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChoiceVariableSpecification choiceVariableSpecification = (ChoiceVariableSpecification) o;
    return Objects.equals(this.options, choiceVariableSpecification.options) &&
        Objects.equals(this.maxSelected, choiceVariableSpecification.maxSelected) &&
        Objects.equals(this.minSelected, choiceVariableSpecification.minSelected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(options, maxSelected, minSelected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChoiceVariableSpecification {\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    maxSelected: ").append(toIndentedString(maxSelected)).append("\n");
    sb.append("    minSelected: ").append(toIndentedString(minSelected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

