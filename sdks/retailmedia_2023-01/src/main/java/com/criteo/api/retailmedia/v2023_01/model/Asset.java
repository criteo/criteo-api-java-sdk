/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: 2023-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.v2023_01.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Handles pointing towards binary content that advertisers can use later on, for example in their creatives.
 */
@ApiModel(description = "Handles pointing towards binary content that advertisers can use later on, for example in their creatives.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Asset {
  public static final String SERIALIZED_NAME_FILE_EXTENSION = "fileExtension";
  @SerializedName(SERIALIZED_NAME_FILE_EXTENSION)
  private String fileExtension;

  public static final String SERIALIZED_NAME_FILE_LOCATION = "fileLocation";
  @SerializedName(SERIALIZED_NAME_FILE_LOCATION)
  private String fileLocation;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;


  public Asset fileExtension(String fileExtension) {
    
    this.fileExtension = fileExtension;
    return this;
  }

   /**
   * The file extension that is asset is representing. Example: jpg, png, gif or pdf.
   * @return fileExtension
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The file extension that is asset is representing. Example: jpg, png, gif or pdf.")

  public String getFileExtension() {
    return fileExtension;
  }


  public void setFileExtension(String fileExtension) {
    this.fileExtension = fileExtension;
  }


  public Asset fileLocation(String fileLocation) {
    
    this.fileLocation = fileLocation;
    return this;
  }

   /**
   * A url pointing towards the static file the asset represents.
   * @return fileLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A url pointing towards the static file the asset represents.")

  public String getFileLocation() {
    return fileLocation;
  }


  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }


  public Asset id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Asset asset = (Asset) o;
    return Objects.equals(this.fileExtension, asset.fileExtension) &&
        Objects.equals(this.fileLocation, asset.fileLocation) &&
        Objects.equals(this.id, asset.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileExtension, fileLocation, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Asset {\n");
    sb.append("    fileExtension: ").append(toIndentedString(fileExtension)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

