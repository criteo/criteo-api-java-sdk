/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A request for sku by sellers or brands.
 */
@ApiModel(description = "A request for sku by sellers or brands.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SkuSearchRequestPreview {
  public static final String SERIALIZED_NAME_QUERY_STRING = "queryString";
  @SerializedName(SERIALIZED_NAME_QUERY_STRING)
  private String queryString;

  public static final String SERIALIZED_NAME_RETAILER_ID = "retailerId";
  @SerializedName(SERIALIZED_NAME_RETAILER_ID)
  private String retailerId;

  public static final String SERIALIZED_NAME_SELLERS = "sellers";
  @SerializedName(SERIALIZED_NAME_SELLERS)
  private List<String> sellers = null;

  public static final String SERIALIZED_NAME_BRAND_IDS = "brandIds";
  @SerializedName(SERIALIZED_NAME_BRAND_IDS)
  private List<String> brandIds = null;

  /**
   * Enum to set isSellerSku field
   */
  @JsonAdapter(SkuTypeEnum.Adapter.class)
  public enum SkuTypeEnum {
    BRAND("brand"),
    
    SELLER("seller"),
    
    ALL("all");

    private String value;

    SkuTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SkuTypeEnum fromValue(String value) {
      for (SkuTypeEnum b : SkuTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SkuTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SkuTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SkuTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SkuTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SKU_TYPE = "skuType";
  @SerializedName(SERIALIZED_NAME_SKU_TYPE)
  private SkuTypeEnum skuType = SkuTypeEnum.BRAND;


  public SkuSearchRequestPreview queryString(String queryString) {
    
    this.queryString = queryString;
    return this;
  }

   /**
   * Query string to search for across SKU&#39;s properties (gtin, mpn, feed ID, Title, and Description)
   * @return queryString
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)")

  public String getQueryString() {
    return queryString;
  }


  public void setQueryString(String queryString) {
    this.queryString = queryString;
  }


  public SkuSearchRequestPreview retailerId(String retailerId) {
    
    this.retailerId = retailerId;
    return this;
  }

   /**
   * Retailer Id
   * @return retailerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Retailer Id")

  public String getRetailerId() {
    return retailerId;
  }


  public void setRetailerId(String retailerId) {
    this.retailerId = retailerId;
  }


  public SkuSearchRequestPreview sellers(List<String> sellers) {
    
    this.sellers = sellers;
    return this;
  }

  public SkuSearchRequestPreview addSellersItem(String sellersItem) {
    if (this.sellers == null) {
      this.sellers = new ArrayList<>();
    }
    this.sellers.add(sellersItem);
    return this;
  }

   /**
   * A list of seller names and/or seller Id&#39;s
   * @return sellers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of seller names and/or seller Id's")

  public List<String> getSellers() {
    return sellers;
  }


  public void setSellers(List<String> sellers) {
    this.sellers = sellers;
  }


  public SkuSearchRequestPreview brandIds(List<String> brandIds) {
    
    this.brandIds = brandIds;
    return this;
  }

  public SkuSearchRequestPreview addBrandIdsItem(String brandIdsItem) {
    if (this.brandIds == null) {
      this.brandIds = new ArrayList<>();
    }
    this.brandIds.add(brandIdsItem);
    return this;
  }

   /**
   * A list of brand Id&#39;s
   * @return brandIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of brand Id's")

  public List<String> getBrandIds() {
    return brandIds;
  }


  public void setBrandIds(List<String> brandIds) {
    this.brandIds = brandIds;
  }


  public SkuSearchRequestPreview skuType(SkuTypeEnum skuType) {
    
    this.skuType = skuType;
    return this;
  }

   /**
   * Enum to set isSellerSku field
   * @return skuType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enum to set isSellerSku field")

  public SkuTypeEnum getSkuType() {
    return skuType;
  }


  public void setSkuType(SkuTypeEnum skuType) {
    this.skuType = skuType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkuSearchRequestPreview skuSearchRequestPreview = (SkuSearchRequestPreview) o;
    return Objects.equals(this.queryString, skuSearchRequestPreview.queryString) &&
        Objects.equals(this.retailerId, skuSearchRequestPreview.retailerId) &&
        Objects.equals(this.sellers, skuSearchRequestPreview.sellers) &&
        Objects.equals(this.brandIds, skuSearchRequestPreview.brandIds) &&
        Objects.equals(this.skuType, skuSearchRequestPreview.skuType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryString, retailerId, sellers, brandIds, skuType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkuSearchRequestPreview {\n");
    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
    sb.append("    retailerId: ").append(toIndentedString(retailerId)).append("\n");
    sb.append("    sellers: ").append(toIndentedString(sellers)).append("\n");
    sb.append("    brandIds: ").append(toIndentedString(brandIds)).append("\n");
    sb.append("    skuType: ").append(toIndentedString(skuType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

