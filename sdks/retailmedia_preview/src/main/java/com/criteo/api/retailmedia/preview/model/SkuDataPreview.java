/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Metadata and usage info of a sku search
 */
@ApiModel(description = "Metadata and usage info of a sku search")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SkuDataPreview {
  public static final String SERIALIZED_NAME_SKU_KEY = "skuKey";
  @SerializedName(SERIALIZED_NAME_SKU_KEY)
  private String skuKey;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_SELLER_ID = "sellerId";
  @SerializedName(SERIALIZED_NAME_SELLER_ID)
  private String sellerId;

  public static final String SERIALIZED_NAME_SELLER_NAME = "sellerName";
  @SerializedName(SERIALIZED_NAME_SELLER_NAME)
  private String sellerName;

  public static final String SERIALIZED_NAME_BRAND_ID = "brandId";
  @SerializedName(SERIALIZED_NAME_BRAND_ID)
  private String brandId;

  public static final String SERIALIZED_NAME_BRAND_NAME = "brandName";
  @SerializedName(SERIALIZED_NAME_BRAND_NAME)
  private String brandName;

  public static final String SERIALIZED_NAME_RETAILER_ID = "retailerId";
  @SerializedName(SERIALIZED_NAME_RETAILER_ID)
  private String retailerId;

  public static final String SERIALIZED_NAME_RETAILER_NAME = "retailerName";
  @SerializedName(SERIALIZED_NAME_RETAILER_NAME)
  private String retailerName;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Double price;

  public static final String SERIALIZED_NAME_IS_IN_STOCK = "isInStock";
  @SerializedName(SERIALIZED_NAME_IS_IN_STOCK)
  private Boolean isInStock;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_MPN = "mpn";
  @SerializedName(SERIALIZED_NAME_MPN)
  private String mpn;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_PRODUCT_PAGE = "productPage";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PAGE)
  private String productPage;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;


  public SkuDataPreview skuKey(String skuKey) {
    
    this.skuKey = skuKey;
    return this;
  }

   /**
   * The product SKU Key.
   * @return skuKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The product SKU Key.")

  public String getSkuKey() {
    return skuKey;
  }


  public void setSkuKey(String skuKey) {
    this.skuKey = skuKey;
  }


  public SkuDataPreview name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A short product name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short product name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SkuDataPreview description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A product description.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A product description.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public SkuDataPreview categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The category Id.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category Id.")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public SkuDataPreview category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The full category breadcrumb in the retailers catalog.
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The full category breadcrumb in the retailers catalog.")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public SkuDataPreview sellerId(String sellerId) {
    
    this.sellerId = sellerId;
    return this;
  }

   /**
   * The id of the seller.
   * @return sellerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the seller.")

  public String getSellerId() {
    return sellerId;
  }


  public void setSellerId(String sellerId) {
    this.sellerId = sellerId;
  }


  public SkuDataPreview sellerName(String sellerName) {
    
    this.sellerName = sellerName;
    return this;
  }

   /**
   * The name of the seller.
   * @return sellerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the seller.")

  public String getSellerName() {
    return sellerName;
  }


  public void setSellerName(String sellerName) {
    this.sellerName = sellerName;
  }


  public SkuDataPreview brandId(String brandId) {
    
    this.brandId = brandId;
    return this;
  }

   /**
   * The global brand id associated to the product.
   * @return brandId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The global brand id associated to the product.")

  public String getBrandId() {
    return brandId;
  }


  public void setBrandId(String brandId) {
    this.brandId = brandId;
  }


  public SkuDataPreview brandName(String brandName) {
    
    this.brandName = brandName;
    return this;
  }

   /**
   * The name of the global brand.
   * @return brandName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the global brand.")

  public String getBrandName() {
    return brandName;
  }


  public void setBrandName(String brandName) {
    this.brandName = brandName;
  }


  public SkuDataPreview retailerId(String retailerId) {
    
    this.retailerId = retailerId;
    return this;
  }

   /**
   * The identifier for the retailer the product is listed by.
   * @return retailerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier for the retailer the product is listed by.")

  public String getRetailerId() {
    return retailerId;
  }


  public void setRetailerId(String retailerId) {
    this.retailerId = retailerId;
  }


  public SkuDataPreview retailerName(String retailerName) {
    
    this.retailerName = retailerName;
    return this;
  }

   /**
   * The retailer name.
   * @return retailerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The retailer name.")

  public String getRetailerName() {
    return retailerName;
  }


  public void setRetailerName(String retailerName) {
    this.retailerName = retailerName;
  }


  public SkuDataPreview price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * The price of the product on the retailer site.
   * @return price
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The price of the product on the retailer site.")

  public Double getPrice() {
    return price;
  }


  public void setPrice(Double price) {
    this.price = price;
  }


  public SkuDataPreview isInStock(Boolean isInStock) {
    
    this.isInStock = isInStock;
    return this;
  }

   /**
   * An indication of if the retailer currently has the product in stock.
   * @return isInStock
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An indication of if the retailer currently has the product in stock.")

  public Boolean getIsInStock() {
    return isInStock;
  }


  public void setIsInStock(Boolean isInStock) {
    this.isInStock = isInStock;
  }


  public SkuDataPreview gtin(String gtin) {
    
    this.gtin = gtin;
    return this;
  }

   /**
   * A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.
   * @return gtin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.")

  public String getGtin() {
    return gtin;
  }


  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public SkuDataPreview mpn(String mpn) {
    
    this.mpn = mpn;
    return this;
  }

   /**
   * The MPN for the product if available.
   * @return mpn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The MPN for the product if available.")

  public String getMpn() {
    return mpn;
  }


  public void setMpn(String mpn) {
    this.mpn = mpn;
  }


  public SkuDataPreview imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * An http image resource provided by the retailer.
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An http image resource provided by the retailer.")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public SkuDataPreview productPage(String productPage) {
    
    this.productPage = productPage;
    return this;
  }

   /**
   * An The product page URL
   * @return productPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An The product page URL")

  public String getProductPage() {
    return productPage;
  }


  public void setProductPage(String productPage) {
    this.productPage = productPage;
  }


  public SkuDataPreview updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkuDataPreview skuDataPreview = (SkuDataPreview) o;
    return Objects.equals(this.skuKey, skuDataPreview.skuKey) &&
        Objects.equals(this.name, skuDataPreview.name) &&
        Objects.equals(this.description, skuDataPreview.description) &&
        Objects.equals(this.categoryId, skuDataPreview.categoryId) &&
        Objects.equals(this.category, skuDataPreview.category) &&
        Objects.equals(this.sellerId, skuDataPreview.sellerId) &&
        Objects.equals(this.sellerName, skuDataPreview.sellerName) &&
        Objects.equals(this.brandId, skuDataPreview.brandId) &&
        Objects.equals(this.brandName, skuDataPreview.brandName) &&
        Objects.equals(this.retailerId, skuDataPreview.retailerId) &&
        Objects.equals(this.retailerName, skuDataPreview.retailerName) &&
        Objects.equals(this.price, skuDataPreview.price) &&
        Objects.equals(this.isInStock, skuDataPreview.isInStock) &&
        Objects.equals(this.gtin, skuDataPreview.gtin) &&
        Objects.equals(this.mpn, skuDataPreview.mpn) &&
        Objects.equals(this.imageUrl, skuDataPreview.imageUrl) &&
        Objects.equals(this.productPage, skuDataPreview.productPage) &&
        Objects.equals(this.updatedAt, skuDataPreview.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(skuKey, name, description, categoryId, category, sellerId, sellerName, brandId, brandName, retailerId, retailerName, price, isInStock, gtin, mpn, imageUrl, productPage, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkuDataPreview {\n");
    sb.append("    skuKey: ").append(toIndentedString(skuKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("    sellerName: ").append(toIndentedString(sellerName)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    brandName: ").append(toIndentedString(brandName)).append("\n");
    sb.append("    retailerId: ").append(toIndentedString(retailerId)).append("\n");
    sb.append("    retailerName: ").append(toIndentedString(retailerName)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isInStock: ").append(toIndentedString(isInStock)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    mpn: ").append(toIndentedString(mpn)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    productPage: ").append(toIndentedString(productPage)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

