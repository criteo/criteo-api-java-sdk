/*
 * Criteo API
 * Criteo API - RetailMedia
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.criteo.api.retailmedia.preview.JSON;

/**
 * the initial set up and configuration options for a new private market demand brand account
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExternalRetailMediaBrandAccountCreationV2 {
  public static final String SERIALIZED_NAME_BRANDS = "brands";
  @SerializedName(SERIALIZED_NAME_BRANDS)
  private List<Long> brands = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ON_BEHALF_COMPANY_NAME = "onBehalfCompanyName";
  @SerializedName(SERIALIZED_NAME_ON_BEHALF_COMPANY_NAME)
  private String onBehalfCompanyName;

  public static final String SERIALIZED_NAME_PAYING_COMPANY_NAME = "payingCompanyName";
  @SerializedName(SERIALIZED_NAME_PAYING_COMPANY_NAME)
  private String payingCompanyName;

  public ExternalRetailMediaBrandAccountCreationV2() {
  }

  public ExternalRetailMediaBrandAccountCreationV2 brands(List<Long> brands) {
    
    this.brands = brands;
    return this;
  }

  public ExternalRetailMediaBrandAccountCreationV2 addBrandsItem(Long brandsItem) {
    if (this.brands == null) {
      this.brands = null;
    }
    this.brands.add(brandsItem);
    return this;
  }

   /**
   * list of brands to link to the new account
   * @return brands
  **/
  @javax.annotation.Nullable

  public List<Long> getBrands() {
    return brands;
  }


  public void setBrands(List<Long> brands) {
    this.brands = brands;
  }


  public ExternalRetailMediaBrandAccountCreationV2 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * the name of the account, must be unique across all accounts
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ExternalRetailMediaBrandAccountCreationV2 onBehalfCompanyName(String onBehalfCompanyName) {
    
    this.onBehalfCompanyName = onBehalfCompanyName;
    return this;
  }

   /**
   * On behalf entity name of ads for the Digital Services Act
   * @return onBehalfCompanyName
  **/
  @javax.annotation.Nullable

  public String getOnBehalfCompanyName() {
    return onBehalfCompanyName;
  }


  public void setOnBehalfCompanyName(String onBehalfCompanyName) {
    this.onBehalfCompanyName = onBehalfCompanyName;
  }


  public ExternalRetailMediaBrandAccountCreationV2 payingCompanyName(String payingCompanyName) {
    
    this.payingCompanyName = payingCompanyName;
    return this;
  }

   /**
   * Display name for reporting the owning entity of ads for the Digital Services Act in the European Union
   * @return payingCompanyName
  **/
  @javax.annotation.Nullable

  public String getPayingCompanyName() {
    return payingCompanyName;
  }


  public void setPayingCompanyName(String payingCompanyName) {
    this.payingCompanyName = payingCompanyName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalRetailMediaBrandAccountCreationV2 externalRetailMediaBrandAccountCreationV2 = (ExternalRetailMediaBrandAccountCreationV2) o;
    return Objects.equals(this.brands, externalRetailMediaBrandAccountCreationV2.brands) &&
        Objects.equals(this.name, externalRetailMediaBrandAccountCreationV2.name) &&
        Objects.equals(this.onBehalfCompanyName, externalRetailMediaBrandAccountCreationV2.onBehalfCompanyName) &&
        Objects.equals(this.payingCompanyName, externalRetailMediaBrandAccountCreationV2.payingCompanyName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(brands, name, onBehalfCompanyName, payingCompanyName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalRetailMediaBrandAccountCreationV2 {\n");
    sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onBehalfCompanyName: ").append(toIndentedString(onBehalfCompanyName)).append("\n");
    sb.append("    payingCompanyName: ").append(toIndentedString(payingCompanyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("brands");
    openapiFields.add("name");
    openapiFields.add("onBehalfCompanyName");
    openapiFields.add("payingCompanyName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ExternalRetailMediaBrandAccountCreationV2
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ExternalRetailMediaBrandAccountCreationV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExternalRetailMediaBrandAccountCreationV2 is not found in the empty JSON string", ExternalRetailMediaBrandAccountCreationV2.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ExternalRetailMediaBrandAccountCreationV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExternalRetailMediaBrandAccountCreationV2` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("brands") != null && !jsonObj.get("brands").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `brands` to be an array in the JSON string but got `%s`", jsonObj.get("brands").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("onBehalfCompanyName") != null && !jsonObj.get("onBehalfCompanyName").isJsonNull()) && !jsonObj.get("onBehalfCompanyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `onBehalfCompanyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onBehalfCompanyName").toString()));
      }
      if ((jsonObj.get("payingCompanyName") != null && !jsonObj.get("payingCompanyName").isJsonNull()) && !jsonObj.get("payingCompanyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payingCompanyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payingCompanyName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExternalRetailMediaBrandAccountCreationV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExternalRetailMediaBrandAccountCreationV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExternalRetailMediaBrandAccountCreationV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExternalRetailMediaBrandAccountCreationV2.class));

       return (TypeAdapter<T>) new TypeAdapter<ExternalRetailMediaBrandAccountCreationV2>() {
           @Override
           public void write(JsonWriter out, ExternalRetailMediaBrandAccountCreationV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExternalRetailMediaBrandAccountCreationV2 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExternalRetailMediaBrandAccountCreationV2 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExternalRetailMediaBrandAccountCreationV2
  * @throws IOException if the JSON string is invalid with respect to ExternalRetailMediaBrandAccountCreationV2
  */
  public static ExternalRetailMediaBrandAccountCreationV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExternalRetailMediaBrandAccountCreationV2.class);
  }

 /**
  * Convert an instance of ExternalRetailMediaBrandAccountCreationV2 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

