/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ad Placement information on a page
 */
@ApiModel(description = "Ad Placement information on a page")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PlacementPreview {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RETAILER_ID = "retailerId";
  @SerializedName(SERIALIZED_NAME_RETAILER_ID)
  private String retailerId;

  /**
   * Page Type
   */
  @JsonAdapter(PageTypeEnum.Adapter.class)
  public enum PageTypeEnum {
    UNKNOWN("Unknown"),
    
    SEARCH("Search"),
    
    HOME("Home"),
    
    BROWSE("Browse"),
    
    CHECKOUT("Checkout"),
    
    CATEGORY("Category"),
    
    PRODUCTDETAIL("ProductDetail"),
    
    CONFIRMATION("Confirmation"),
    
    MERCHANDISING("Merchandising"),
    
    DEALS("Deals");

    private String value;

    PageTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PageTypeEnum fromValue(String value) {
      for (PageTypeEnum b : PageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PageTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PageTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PageTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAGE_TYPE = "pageType";
  @SerializedName(SERIALIZED_NAME_PAGE_TYPE)
  private PageTypeEnum pageType;

  /**
   * Page Environment
   */
  @JsonAdapter(PageEnvironmentTypeEnum.Adapter.class)
  public enum PageEnvironmentTypeEnum {
    UNKNOWN("Unknown"),
    
    WEB("Web"),
    
    MOBILE("Mobile"),
    
    APP("App");

    private String value;

    PageEnvironmentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PageEnvironmentTypeEnum fromValue(String value) {
      for (PageEnvironmentTypeEnum b : PageEnvironmentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PageEnvironmentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PageEnvironmentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PageEnvironmentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PageEnvironmentTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAGE_ENVIRONMENT_TYPE = "pageEnvironmentType";
  @SerializedName(SERIALIZED_NAME_PAGE_ENVIRONMENT_TYPE)
  private PageEnvironmentTypeEnum pageEnvironmentType;


  public PlacementPreview name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the placement
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the placement")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PlacementPreview retailerId(String retailerId) {
    
    this.retailerId = retailerId;
    return this;
  }

   /**
   * Retailer Id
   * @return retailerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Retailer Id")

  public String getRetailerId() {
    return retailerId;
  }


  public void setRetailerId(String retailerId) {
    this.retailerId = retailerId;
  }


  public PlacementPreview pageType(PageTypeEnum pageType) {
    
    this.pageType = pageType;
    return this;
  }

   /**
   * Page Type
   * @return pageType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Page Type")

  public PageTypeEnum getPageType() {
    return pageType;
  }


  public void setPageType(PageTypeEnum pageType) {
    this.pageType = pageType;
  }


  public PlacementPreview pageEnvironmentType(PageEnvironmentTypeEnum pageEnvironmentType) {
    
    this.pageEnvironmentType = pageEnvironmentType;
    return this;
  }

   /**
   * Page Environment
   * @return pageEnvironmentType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Page Environment")

  public PageEnvironmentTypeEnum getPageEnvironmentType() {
    return pageEnvironmentType;
  }


  public void setPageEnvironmentType(PageEnvironmentTypeEnum pageEnvironmentType) {
    this.pageEnvironmentType = pageEnvironmentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlacementPreview placementPreview = (PlacementPreview) o;
    return Objects.equals(this.name, placementPreview.name) &&
        Objects.equals(this.retailerId, placementPreview.retailerId) &&
        Objects.equals(this.pageType, placementPreview.pageType) &&
        Objects.equals(this.pageEnvironmentType, placementPreview.pageEnvironmentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, retailerId, pageType, pageEnvironmentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlacementPreview {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    retailerId: ").append(toIndentedString(retailerId)).append("\n");
    sb.append("    pageType: ").append(toIndentedString(pageType)).append("\n");
    sb.append("    pageEnvironmentType: ").append(toIndentedString(pageEnvironmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

