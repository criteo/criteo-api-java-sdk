buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

if (JavaVersion.current().isJava8Compatible()) {
    // Suppress the many Javadoc warnings that we would otherwise get from the generated code
    tasks.withType(Javadoc) {
        options.addBooleanOption('Xdoclint:none', true)
    }
}

group = 'com.criteo'
version = '2023.01.0.230323'

repositories {
    jcenter()
}
sourceSets {
    main.java.srcDirs = ['src/main/java']
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile 'io.swagger:swagger-annotations:1.5.22'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile 'com.squareup.okhttp3:okhttp:4.9.3'
    compile 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'io.gsonfire:gson-fire:1.8.3'
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.1'
    testCompile 'junit:junit:4.13.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

javadoc {
    options.encoding = 'UTF-8'
    options.tags = [ "http.response.details:a:Http Response Details" ]
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.criteo'
            artifactId 'criteo-api-marketingsolutions-sdk'
            version '2023.01.0.230323'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                packaging = 'jar'
                name = 'com.criteo:criteo-api-marketingsolutions-sdk'
                description = 'JAVA SDK for Criteo API marketingsolutions for 2023_01 version'
                url = 'https://github.com/criteo/criteo-api-java-sdk'
                licenses {
                    license {
                        name = 'Apache License, version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Criteo'
                        email = 'open-source@criteo.com'
                        url = 'https://www.criteo.com/'
                        organization = 'Criteo'
                        organizationUrl = 'https://www.criteo.com/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/criteo/criteo-api-java-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:criteo/criteo-api-java-sdk.git'
                    url = 'https://github.com/criteo/criteo-api-java-sdk'
                }
            }
        }
    }
}

signing {
    def signingKey = System.getenv("MAVEN_SECRING_GPG_BASE64")
    def signingPassword = System.getenv("MAVEN_SECRING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    packageGroup = 'com.criteo'
    repositories {
        sonatype {
            username = "criteo-oss"
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }

    transitionCheckOptions {
        maxRetries.set(50)
        delayBetween.set(java.time.Duration.ofMillis(3000))
    }
}