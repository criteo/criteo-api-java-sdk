/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Represents Oci standard brand-safety segment.
 */
@JsonAdapter(OciBrandSafetySegment.Adapter.class)
public enum OciBrandSafetySegment {
  
  ADULT("gv_adult"),
  
  ARMS("gv_arms"),
  
  CRIME("gv_crime"),
  
  DEATH_INJURY("gv_death_injury"),
  
  DOWNLOAD("gv_download"),
  
  DRUGS("gv_drugs"),
  
  HATESPEECH("gv_hatespeech"),
  
  MILITARY("gv_military"),
  
  OBSCENITY("gv_obscenity"),
  
  TERRORISM("gv_terrorism"),
  
  TOBACCO("gv_tobacco"),
  
  SAFE_ADULT("gv_safe_adult"),
  
  SAFE_ARMS("gv_safe_arms"),
  
  SAFE_CRIME("gv_safe_crime"),
  
  SAFE_DEATH_INJURY("gv_safe_death_injury"),
  
  SAFE_DOWNLOAD("gv_safe_download"),
  
  SAFE_DRUGS("gv_safe_drugs"),
  
  SAFE_HATESPEECH("gv_safe_hatespeech"),
  
  SAFE_MILITARY("gv_safe_military"),
  
  SAFE_OBSCENITY("gv_safe_obscenity"),
  
  SAFE_TERRORISM("gv_safe_terrorism"),
  
  SAFE_TOBACCO("gv_safe_tobacco"),
  
  CRIME_OTHER("gv_crime_other"),
  
  CRIME_SERIOUS("gv_crime_serious"),
  
  CRIME_SEX("gv_crime_sex"),
  
  CRIME_VIOLENT("gv_crime_violent"),
  
  DEATH_INJURY_AIR("gv_death_injury_air"),
  
  DEATH_INJURY_FIRE("gv_death_injury_fire"),
  
  DEATH_INJURY_MISC("gv_death_injury_misc"),
  
  DEATH_INJURY_RAIL("gv_death_injury_rail"),
  
  DEATH_INJURY_ROAD("gv_death_injury_road"),
  
  DEATH_INJURY_SEA("gv_death_injury_sea");

  private String value;

  OciBrandSafetySegment(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OciBrandSafetySegment fromValue(String value) {
    for (OciBrandSafetySegment b : OciBrandSafetySegment.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OciBrandSafetySegment> {
    @Override
    public void write(final JsonWriter jsonWriter, final OciBrandSafetySegment enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OciBrandSafetySegment read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OciBrandSafetySegment.fromValue(value);
    }
  }
}

