/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Entity consists of the color aliases of the creative&#39;s elements
 */
@ApiModel(description = "Entity consists of the color aliases of the creative's elements")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdaptiveColors {
  public static final String SERIALIZED_NAME_LOGO_AREA_AND_TITLE_COLOR = "logoAreaAndTitleColor";
  @SerializedName(SERIALIZED_NAME_LOGO_AREA_AND_TITLE_COLOR)
  private String logoAreaAndTitleColor;

  public static final String SERIALIZED_NAME_BACKGROUND_COLOR = "backgroundColor";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_COLOR)
  private String backgroundColor;

  public static final String SERIALIZED_NAME_TEXT1_COLOR = "text1Color";
  @SerializedName(SERIALIZED_NAME_TEXT1_COLOR)
  private String text1Color;

  public static final String SERIALIZED_NAME_TEXT2_COLOR = "text2Color";
  @SerializedName(SERIALIZED_NAME_TEXT2_COLOR)
  private String text2Color;

  public static final String SERIALIZED_NAME_CTA_BACKGROUND_COLOR = "ctaBackgroundColor";
  @SerializedName(SERIALIZED_NAME_CTA_BACKGROUND_COLOR)
  private String ctaBackgroundColor;

  public static final String SERIALIZED_NAME_CTA_TEXT_COLOR = "ctaTextColor";
  @SerializedName(SERIALIZED_NAME_CTA_TEXT_COLOR)
  private String ctaTextColor;


  public AdaptiveColors logoAreaAndTitleColor(String logoAreaAndTitleColor) {
    
    this.logoAreaAndTitleColor = logoAreaAndTitleColor;
    return this;
  }

   /**
   * Color of the creative&#39;s logo area.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;).
   * @return logoAreaAndTitleColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the creative's logo area.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\").")

  public String getLogoAreaAndTitleColor() {
    return logoAreaAndTitleColor;
  }


  public void setLogoAreaAndTitleColor(String logoAreaAndTitleColor) {
    this.logoAreaAndTitleColor = logoAreaAndTitleColor;
  }


  public AdaptiveColors backgroundColor(String backgroundColor) {
    
    this.backgroundColor = backgroundColor;
    return this;
  }

   /**
   * Color of the creative&#39;s background.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;)
   * @return backgroundColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the creative's background.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\")")

  public String getBackgroundColor() {
    return backgroundColor;
  }


  public void setBackgroundColor(String backgroundColor) {
    this.backgroundColor = backgroundColor;
  }


  public AdaptiveColors text1Color(String text1Color) {
    
    this.text1Color = text1Color;
    return this;
  }

   /**
   * Color of the headline and the description texts.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;)
   * @return text1Color
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the headline and the description texts.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\")")

  public String getText1Color() {
    return text1Color;
  }


  public void setText1Color(String text1Color) {
    this.text1Color = text1Color;
  }


  public AdaptiveColors text2Color(String text2Color) {
    
    this.text2Color = text2Color;
    return this;
  }

   /**
   * Color of the image set&#39;s headline text.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;)
   * @return text2Color
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the image set's headline text.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\")")

  public String getText2Color() {
    return text2Color;
  }


  public void setText2Color(String text2Color) {
    this.text2Color = text2Color;
  }


  public AdaptiveColors ctaBackgroundColor(String ctaBackgroundColor) {
    
    this.ctaBackgroundColor = ctaBackgroundColor;
    return this;
  }

   /**
   * Color of the background of the CTA.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;).
   * @return ctaBackgroundColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the background of the CTA.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\").")

  public String getCtaBackgroundColor() {
    return ctaBackgroundColor;
  }


  public void setCtaBackgroundColor(String ctaBackgroundColor) {
    this.ctaBackgroundColor = ctaBackgroundColor;
  }


  public AdaptiveColors ctaTextColor(String ctaTextColor) {
    
    this.ctaTextColor = ctaTextColor;
    return this;
  }

   /**
   * Color of the text of the CTA.  A valid RGB24 color in hexadecimal (e.g. \&quot;AB00FF\&quot;).
   * @return ctaTextColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Color of the text of the CTA.  A valid RGB24 color in hexadecimal (e.g. \"AB00FF\").")

  public String getCtaTextColor() {
    return ctaTextColor;
  }


  public void setCtaTextColor(String ctaTextColor) {
    this.ctaTextColor = ctaTextColor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdaptiveColors adaptiveColors = (AdaptiveColors) o;
    return Objects.equals(this.logoAreaAndTitleColor, adaptiveColors.logoAreaAndTitleColor) &&
        Objects.equals(this.backgroundColor, adaptiveColors.backgroundColor) &&
        Objects.equals(this.text1Color, adaptiveColors.text1Color) &&
        Objects.equals(this.text2Color, adaptiveColors.text2Color) &&
        Objects.equals(this.ctaBackgroundColor, adaptiveColors.ctaBackgroundColor) &&
        Objects.equals(this.ctaTextColor, adaptiveColors.ctaTextColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logoAreaAndTitleColor, backgroundColor, text1Color, text2Color, ctaBackgroundColor, ctaTextColor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdaptiveColors {\n");
    sb.append("    logoAreaAndTitleColor: ").append(toIndentedString(logoAreaAndTitleColor)).append("\n");
    sb.append("    backgroundColor: ").append(toIndentedString(backgroundColor)).append("\n");
    sb.append("    text1Color: ").append(toIndentedString(text1Color)).append("\n");
    sb.append("    text2Color: ").append(toIndentedString(text2Color)).append("\n");
    sb.append("    ctaBackgroundColor: ").append(toIndentedString(ctaBackgroundColor)).append("\n");
    sb.append("    ctaTextColor: ").append(toIndentedString(ctaTextColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

