/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.marketingsolutions.preview.model.AdaptiveAttributes;
import com.criteo.api.marketingsolutions.preview.model.DynamicAttributes;
import com.criteo.api.marketingsolutions.preview.model.HtmlTagAttributes;
import com.criteo.api.marketingsolutions.preview.model.ImageAttributes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A creative is a project with the necessary information to display a creative
 */
@ApiModel(description = "A creative is a project with the necessary information to display a creative")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Creative {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_DATASET_ID = "datasetId";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  public static final String SERIALIZED_NAME_IMAGE_ATTRIBUTES = "imageAttributes";
  @SerializedName(SERIALIZED_NAME_IMAGE_ATTRIBUTES)
  private ImageAttributes imageAttributes;

  public static final String SERIALIZED_NAME_HTML_TAG_ATTRIBUTES = "htmlTagAttributes";
  @SerializedName(SERIALIZED_NAME_HTML_TAG_ATTRIBUTES)
  private HtmlTagAttributes htmlTagAttributes;

  public static final String SERIALIZED_NAME_DYNAMIC_ATTRIBUTES = "dynamicAttributes";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_ATTRIBUTES)
  private DynamicAttributes dynamicAttributes;

  public static final String SERIALIZED_NAME_ADAPTIVE_ATTRIBUTES = "adaptiveAttributes";
  @SerializedName(SERIALIZED_NAME_ADAPTIVE_ATTRIBUTES)
  private AdaptiveAttributes adaptiveAttributes;


  public Creative name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the creative
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the creative")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Creative description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the creative
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the creative")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Creative author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * The login of the person who created this creative (
   * @return author
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The login of the person who created this creative (")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    this.author = author;
  }


  public Creative status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the creative
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The status of the creative")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public Creative format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * The format of the creative
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The format of the creative")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  public Creative advertiserId(String advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * Advertiser linked to the Creative
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Advertiser linked to the Creative")

  public String getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public Creative datasetId(String datasetId) {
    
    this.datasetId = datasetId;
    return this;
  }

   /**
   * Data set id linked to the Creative
   * @return datasetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data set id linked to the Creative")

  public String getDatasetId() {
    return datasetId;
  }


  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public Creative imageAttributes(ImageAttributes imageAttributes) {
    
    this.imageAttributes = imageAttributes;
    return this;
  }

   /**
   * Get imageAttributes
   * @return imageAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImageAttributes getImageAttributes() {
    return imageAttributes;
  }


  public void setImageAttributes(ImageAttributes imageAttributes) {
    this.imageAttributes = imageAttributes;
  }


  public Creative htmlTagAttributes(HtmlTagAttributes htmlTagAttributes) {
    
    this.htmlTagAttributes = htmlTagAttributes;
    return this;
  }

   /**
   * Get htmlTagAttributes
   * @return htmlTagAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HtmlTagAttributes getHtmlTagAttributes() {
    return htmlTagAttributes;
  }


  public void setHtmlTagAttributes(HtmlTagAttributes htmlTagAttributes) {
    this.htmlTagAttributes = htmlTagAttributes;
  }


  public Creative dynamicAttributes(DynamicAttributes dynamicAttributes) {
    
    this.dynamicAttributes = dynamicAttributes;
    return this;
  }

   /**
   * Get dynamicAttributes
   * @return dynamicAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynamicAttributes getDynamicAttributes() {
    return dynamicAttributes;
  }


  public void setDynamicAttributes(DynamicAttributes dynamicAttributes) {
    this.dynamicAttributes = dynamicAttributes;
  }


  public Creative adaptiveAttributes(AdaptiveAttributes adaptiveAttributes) {
    
    this.adaptiveAttributes = adaptiveAttributes;
    return this;
  }

   /**
   * Get adaptiveAttributes
   * @return adaptiveAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdaptiveAttributes getAdaptiveAttributes() {
    return adaptiveAttributes;
  }


  public void setAdaptiveAttributes(AdaptiveAttributes adaptiveAttributes) {
    this.adaptiveAttributes = adaptiveAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Creative creative = (Creative) o;
    return Objects.equals(this.name, creative.name) &&
        Objects.equals(this.description, creative.description) &&
        Objects.equals(this.author, creative.author) &&
        Objects.equals(this.status, creative.status) &&
        Objects.equals(this.format, creative.format) &&
        Objects.equals(this.advertiserId, creative.advertiserId) &&
        Objects.equals(this.datasetId, creative.datasetId) &&
        Objects.equals(this.imageAttributes, creative.imageAttributes) &&
        Objects.equals(this.htmlTagAttributes, creative.htmlTagAttributes) &&
        Objects.equals(this.dynamicAttributes, creative.dynamicAttributes) &&
        Objects.equals(this.adaptiveAttributes, creative.adaptiveAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, author, status, format, advertiserId, datasetId, imageAttributes, htmlTagAttributes, dynamicAttributes, adaptiveAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Creative {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    imageAttributes: ").append(toIndentedString(imageAttributes)).append("\n");
    sb.append("    htmlTagAttributes: ").append(toIndentedString(htmlTagAttributes)).append("\n");
    sb.append("    dynamicAttributes: ").append(toIndentedString(dynamicAttributes)).append("\n");
    sb.append("    adaptiveAttributes: ").append(toIndentedString(adaptiveAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

