/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;

/**
 * Entity consists of the url of the video, its duration and its shape.
 */
@ApiModel(description = "Entity consists of the url of the video, its duration and its shape.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VideoDetail {
  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration;

  /**
   * Shape of the video
   */
  @JsonAdapter(ShapeEnum.Adapter.class)
  public enum ShapeEnum {
    HORIZONTAL("Horizontal"),
    
    VERTICAL("Vertical"),
    
    SQUARE("Square");

    private String value;

    ShapeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShapeEnum fromValue(String value) {
      for (ShapeEnum b : ShapeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ShapeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShapeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShapeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ShapeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SHAPE = "shape";
  @SerializedName(SERIALIZED_NAME_SHAPE)
  private ShapeEnum shape;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;


  public VideoDetail duration(Double duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * The duration of the video in milliseconds, the video could be trimmed if it is longer than 30000 ms.
   * @return duration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The duration of the video in milliseconds, the video could be trimmed if it is longer than 30000 ms.")

  public Double getDuration() {
    return duration;
  }


  public void setDuration(Double duration) {
    this.duration = duration;
  }


  public VideoDetail shape(ShapeEnum shape) {
    
    this.shape = shape;
    return this;
  }

   /**
   * Shape of the video
   * @return shape
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Shape of the video")

  public ShapeEnum getShape() {
    return shape;
  }


  public void setShape(ShapeEnum shape) {
    this.shape = shape;
  }


  public VideoDetail url(URI url) {
    
    this.url = url;
    return this;
  }

   /**
   * URL of the video uploaded on demostatic.criteo.com when deploying and then static.criteo.net
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "URL of the video uploaded on demostatic.criteo.com when deploying and then static.criteo.net")

  public URI getUrl() {
    return url;
  }


  public void setUrl(URI url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoDetail videoDetail = (VideoDetail) o;
    return Objects.equals(this.duration, videoDetail.duration) &&
        Objects.equals(this.shape, videoDetail.shape) &&
        Objects.equals(this.url, videoDetail.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, shape, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoDetail {\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    shape: ").append(toIndentedString(shape)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

