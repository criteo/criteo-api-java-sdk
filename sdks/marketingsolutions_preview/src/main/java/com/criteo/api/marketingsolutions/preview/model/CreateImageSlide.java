/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Slide containing the images of the same size as a base-64 encoded string
 */
@ApiModel(description = "Slide containing the images of the same size as a base-64 encoded string")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateImageSlide {
  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_SLIDE_BASE64_STRINGS = "slideBase64Strings";
  @SerializedName(SERIALIZED_NAME_SLIDE_BASE64_STRINGS)
  private List<String> slideBase64Strings = null;


  public CreateImageSlide width(Integer width) {
    
    this.width = width;
    return this;
  }

   /**
   * Width of the Coupon slide
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Width of the Coupon slide")

  public Integer getWidth() {
    return width;
  }


  public void setWidth(Integer width) {
    this.width = width;
  }


  public CreateImageSlide height(Integer height) {
    
    this.height = height;
    return this;
  }

   /**
   * Height of the Coupon slide
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Height of the Coupon slide")

  public Integer getHeight() {
    return height;
  }


  public void setHeight(Integer height) {
    this.height = height;
  }


  public CreateImageSlide slideBase64Strings(List<String> slideBase64Strings) {
    
    this.slideBase64Strings = slideBase64Strings;
    return this;
  }

  public CreateImageSlide addSlideBase64StringsItem(String slideBase64StringsItem) {
    if (this.slideBase64Strings == null) {
      this.slideBase64Strings = new ArrayList<>();
    }
    this.slideBase64Strings.add(slideBase64StringsItem);
    return this;
  }

   /**
   * Array of images of the same size as a base-64 encoded string
   * @return slideBase64Strings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of images of the same size as a base-64 encoded string")

  public List<String> getSlideBase64Strings() {
    return slideBase64Strings;
  }


  public void setSlideBase64Strings(List<String> slideBase64Strings) {
    this.slideBase64Strings = slideBase64Strings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateImageSlide createImageSlide = (CreateImageSlide) o;
    return Objects.equals(this.width, createImageSlide.width) &&
        Objects.equals(this.height, createImageSlide.height) &&
        Objects.equals(this.slideBase64Strings, createImageSlide.slideBase64Strings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(width, height, slideBase64Strings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateImageSlide {\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    slideBase64Strings: ").append(toIndentedString(slideBase64Strings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

