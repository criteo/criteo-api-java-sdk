/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.marketingsolutions.preview.model.AdaptiveColors;
import com.criteo.api.marketingsolutions.preview.model.ImageSetBase64;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;

/**
 * The attributes specific to create or update an Adaptive creative
 */
@ApiModel(description = "The attributes specific to create or update an Adaptive creative")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdaptiveWriteAttributes {
  public static final String SERIALIZED_NAME_LAYOUTS = "layouts";
  @SerializedName(SERIALIZED_NAME_LAYOUTS)
  private List<String> layouts = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGO_BASE64_STRING = "logoBase64String";
  @SerializedName(SERIALIZED_NAME_LOGO_BASE64_STRING)
  private String logoBase64String;

  public static final String SERIALIZED_NAME_HEADLINE_TEXT = "headlineText";
  @SerializedName(SERIALIZED_NAME_HEADLINE_TEXT)
  private String headlineText;

  public static final String SERIALIZED_NAME_HEADLINE_FONT = "headlineFont";
  @SerializedName(SERIALIZED_NAME_HEADLINE_FONT)
  private String headlineFont;

  public static final String SERIALIZED_NAME_DESCRIPTION_TEXT = "descriptionText";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_TEXT)
  private String descriptionText;

  public static final String SERIALIZED_NAME_DESCRIPTION_FONT = "descriptionFont";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FONT)
  private String descriptionFont;

  public static final String SERIALIZED_NAME_CALLS_TO_ACTION = "callsToAction";
  @SerializedName(SERIALIZED_NAME_CALLS_TO_ACTION)
  private List<String> callsToAction = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLORS = "colors";
  @SerializedName(SERIALIZED_NAME_COLORS)
  private AdaptiveColors colors;

  public static final String SERIALIZED_NAME_IMAGE_SETS_BASE64 = "imageSetsBase64";
  @SerializedName(SERIALIZED_NAME_IMAGE_SETS_BASE64)
  private List<ImageSetBase64> imageSetsBase64 = null;

  public static final String SERIALIZED_NAME_IMAGE_DISPLAY = "imageDisplay";
  @SerializedName(SERIALIZED_NAME_IMAGE_DISPLAY)
  private String imageDisplay;

  public static final String SERIALIZED_NAME_VIDEO_BASE64_STRINGS = "videoBase64Strings";
  @SerializedName(SERIALIZED_NAME_VIDEO_BASE64_STRINGS)
  private List<String> videoBase64Strings = null;

  public static final String SERIALIZED_NAME_LANDING_PAGE_URL = "landingPageUrl";
  @SerializedName(SERIALIZED_NAME_LANDING_PAGE_URL)
  private URI landingPageUrl;


  public AdaptiveWriteAttributes layouts(List<String> layouts) {
    
    this.layouts = layouts;
    return this;
  }

  public AdaptiveWriteAttributes addLayoutsItem(String layoutsItem) {
    this.layouts.add(layoutsItem);
    return this;
  }

   /**
   * The Adaptive layouts that are enabled.  It can contain any of the following values: \&quot;Editorial\&quot;, “Montage“, \&quot;InBannerVideo\&quot;.
   * @return layouts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Adaptive layouts that are enabled.  It can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\".")

  public List<String> getLayouts() {
    return layouts;
  }


  public void setLayouts(List<String> layouts) {
    this.layouts = layouts;
  }


  public AdaptiveWriteAttributes logoBase64String(String logoBase64String) {
    
    this.logoBase64String = logoBase64String;
    return this;
  }

   /**
   * Logo image as a base-64 encoded string
   * @return logoBase64String
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Logo image as a base-64 encoded string")

  public String getLogoBase64String() {
    return logoBase64String;
  }


  public void setLogoBase64String(String logoBase64String) {
    this.logoBase64String = logoBase64String;
  }


  public AdaptiveWriteAttributes headlineText(String headlineText) {
    
    this.headlineText = headlineText;
    return this;
  }

   /**
   * The headline text of the banner
   * @return headlineText
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The headline text of the banner")

  public String getHeadlineText() {
    return headlineText;
  }


  public void setHeadlineText(String headlineText) {
    this.headlineText = headlineText;
  }


  public AdaptiveWriteAttributes headlineFont(String headlineFont) {
    
    this.headlineFont = headlineFont;
    return this;
  }

   /**
   * Font of the headline  Valid supported font like \&quot;Arial\&quot;
   * @return headlineFont
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Font of the headline  Valid supported font like \"Arial\"")

  public String getHeadlineFont() {
    return headlineFont;
  }


  public void setHeadlineFont(String headlineFont) {
    this.headlineFont = headlineFont;
  }


  public AdaptiveWriteAttributes descriptionText(String descriptionText) {
    
    this.descriptionText = descriptionText;
    return this;
  }

   /**
   * The description text of the banner
   * @return descriptionText
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The description text of the banner")

  public String getDescriptionText() {
    return descriptionText;
  }


  public void setDescriptionText(String descriptionText) {
    this.descriptionText = descriptionText;
  }


  public AdaptiveWriteAttributes descriptionFont(String descriptionFont) {
    
    this.descriptionFont = descriptionFont;
    return this;
  }

   /**
   * Font of the description  Valid supported font like \&quot;Arial\&quot;
   * @return descriptionFont
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Font of the description  Valid supported font like \"Arial\"")

  public String getDescriptionFont() {
    return descriptionFont;
  }


  public void setDescriptionFont(String descriptionFont) {
    this.descriptionFont = descriptionFont;
  }


  public AdaptiveWriteAttributes callsToAction(List<String> callsToAction) {
    
    this.callsToAction = callsToAction;
    return this;
  }

  public AdaptiveWriteAttributes addCallsToActionItem(String callsToActionItem) {
    this.callsToAction.add(callsToActionItem);
    return this;
  }

   /**
   * A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate  response, such as “Buy now” or “Go!”.
   * @return callsToAction
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate  response, such as “Buy now” or “Go!”.")

  public List<String> getCallsToAction() {
    return callsToAction;
  }


  public void setCallsToAction(List<String> callsToAction) {
    this.callsToAction = callsToAction;
  }


  public AdaptiveWriteAttributes colors(AdaptiveColors colors) {
    
    this.colors = colors;
    return this;
  }

   /**
   * Get colors
   * @return colors
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AdaptiveColors getColors() {
    return colors;
  }


  public void setColors(AdaptiveColors colors) {
    this.colors = colors;
  }


  public AdaptiveWriteAttributes imageSetsBase64(List<ImageSetBase64> imageSetsBase64) {
    
    this.imageSetsBase64 = imageSetsBase64;
    return this;
  }

  public AdaptiveWriteAttributes addImageSetsBase64Item(ImageSetBase64 imageSetsBase64Item) {
    if (this.imageSetsBase64 == null) {
      this.imageSetsBase64 = new ArrayList<>();
    }
    this.imageSetsBase64.add(imageSetsBase64Item);
    return this;
  }

   /**
   * Multiple image sets, each image set consists of multiple images as a base-64 encoded string and a headline text.
   * @return imageSetsBase64
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Multiple image sets, each image set consists of multiple images as a base-64 encoded string and a headline text.")

  public List<ImageSetBase64> getImageSetsBase64() {
    return imageSetsBase64;
  }


  public void setImageSetsBase64(List<ImageSetBase64> imageSetsBase64) {
    this.imageSetsBase64 = imageSetsBase64;
  }


  public AdaptiveWriteAttributes imageDisplay(String imageDisplay) {
    
    this.imageDisplay = imageDisplay;
    return this;
  }

   /**
   * Value can be \&quot;ShowFullImage\&quot; or \&quot;ZoomOnImage\&quot;. Choose whether your image set should fit inside the allocated  space (\&quot;ShowFullImage\&quot;) or whether it should fill that space (\&quot;ZoomOnImage\&quot;). If you choose ZoomOnImage, there may be some  image cropping.
   * @return imageDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated  space (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some  image cropping.")

  public String getImageDisplay() {
    return imageDisplay;
  }


  public void setImageDisplay(String imageDisplay) {
    this.imageDisplay = imageDisplay;
  }


  public AdaptiveWriteAttributes videoBase64Strings(List<String> videoBase64Strings) {
    
    this.videoBase64Strings = videoBase64Strings;
    return this;
  }

  public AdaptiveWriteAttributes addVideoBase64StringsItem(String videoBase64StringsItem) {
    if (this.videoBase64Strings == null) {
      this.videoBase64Strings = new ArrayList<>();
    }
    this.videoBase64Strings.add(videoBase64StringsItem);
    return this;
  }

   /**
   * Multiple videos potentially in different shapes, each video is a base-64 encoded string.
   * @return videoBase64Strings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Multiple videos potentially in different shapes, each video is a base-64 encoded string.")

  public List<String> getVideoBase64Strings() {
    return videoBase64Strings;
  }


  public void setVideoBase64Strings(List<String> videoBase64Strings) {
    this.videoBase64Strings = videoBase64Strings;
  }


  public AdaptiveWriteAttributes landingPageUrl(URI landingPageUrl) {
    
    this.landingPageUrl = landingPageUrl;
    return this;
  }

   /**
   * Web redirection of the landing page url.
   * @return landingPageUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Web redirection of the landing page url.")

  public URI getLandingPageUrl() {
    return landingPageUrl;
  }


  public void setLandingPageUrl(URI landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdaptiveWriteAttributes adaptiveWriteAttributes = (AdaptiveWriteAttributes) o;
    return Objects.equals(this.layouts, adaptiveWriteAttributes.layouts) &&
        Objects.equals(this.logoBase64String, adaptiveWriteAttributes.logoBase64String) &&
        Objects.equals(this.headlineText, adaptiveWriteAttributes.headlineText) &&
        Objects.equals(this.headlineFont, adaptiveWriteAttributes.headlineFont) &&
        Objects.equals(this.descriptionText, adaptiveWriteAttributes.descriptionText) &&
        Objects.equals(this.descriptionFont, adaptiveWriteAttributes.descriptionFont) &&
        Objects.equals(this.callsToAction, adaptiveWriteAttributes.callsToAction) &&
        Objects.equals(this.colors, adaptiveWriteAttributes.colors) &&
        Objects.equals(this.imageSetsBase64, adaptiveWriteAttributes.imageSetsBase64) &&
        Objects.equals(this.imageDisplay, adaptiveWriteAttributes.imageDisplay) &&
        Objects.equals(this.videoBase64Strings, adaptiveWriteAttributes.videoBase64Strings) &&
        Objects.equals(this.landingPageUrl, adaptiveWriteAttributes.landingPageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(layouts, logoBase64String, headlineText, headlineFont, descriptionText, descriptionFont, callsToAction, colors, imageSetsBase64, imageDisplay, videoBase64Strings, landingPageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdaptiveWriteAttributes {\n");
    sb.append("    layouts: ").append(toIndentedString(layouts)).append("\n");
    sb.append("    logoBase64String: ").append(toIndentedString(logoBase64String)).append("\n");
    sb.append("    headlineText: ").append(toIndentedString(headlineText)).append("\n");
    sb.append("    headlineFont: ").append(toIndentedString(headlineFont)).append("\n");
    sb.append("    descriptionText: ").append(toIndentedString(descriptionText)).append("\n");
    sb.append("    descriptionFont: ").append(toIndentedString(descriptionFont)).append("\n");
    sb.append("    callsToAction: ").append(toIndentedString(callsToAction)).append("\n");
    sb.append("    colors: ").append(toIndentedString(colors)).append("\n");
    sb.append("    imageSetsBase64: ").append(toIndentedString(imageSetsBase64)).append("\n");
    sb.append("    imageDisplay: ").append(toIndentedString(imageDisplay)).append("\n");
    sb.append("    videoBase64Strings: ").append(toIndentedString(videoBase64Strings)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

