/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Request attributes for async audience performance report
 */
@ApiModel(description = "Request attributes for async audience performance report")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GenerateAudiencePerformanceReportRequestAttributes {
  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  /**
   * The dimension for the report.
   */
  @JsonAdapter(DimensionEnum.Adapter.class)
  public enum DimensionEnum {
    ADVERTISERID("AdvertiserId"),
    
    ADVERTISER("Advertiser"),
    
    TOP30BRANDSBYDISPLAYS("Top30BrandsByDisplays"),
    
    TOP30BRANDSBYCLICKS("Top30BrandsByClicks"),
    
    TOP30BRANDSBYSALES("Top30BrandsBySales"),
    
    TOP30INTERESTSBYDISPLAYS("Top30InterestsByDisplays"),
    
    TOP30INTERESTSBYCLICKS("Top30InterestsByClicks"),
    
    TOP30INTERESTSBYSALES("Top30InterestsBySales");

    private String value;

    DimensionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DimensionEnum fromValue(String value) {
      for (DimensionEnum b : DimensionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DimensionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DimensionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DimensionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DimensionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DIMENSION = "dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private DimensionEnum dimension;

  /**
   * Gets or Sets metrics
   */
  @JsonAdapter(MetricsEnum.Adapter.class)
  public enum MetricsEnum {
    CLICKS("Clicks"),
    
    DISPLAYS("Displays"),
    
    VISITS("Visits"),
    
    SALES("Sales"),
    
    REVENUE("Revenue"),
    
    COSTPERVISIT("CostPerVisit"),
    
    EXPOSEDUSERS("ExposedUsers");

    private String value;

    MetricsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MetricsEnum fromValue(String value) {
      for (MetricsEnum b : MetricsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MetricsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MetricsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MetricsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MetricsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<MetricsEnum> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_AD_SET_IDS = "adSetIds";
  @SerializedName(SERIALIZED_NAME_AD_SET_IDS)
  private List<String> adSetIds = null;

  public static final String SERIALIZED_NAME_AUDIENCE_IDS = "audienceIds";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_IDS)
  private List<String> audienceIds = null;

  public static final String SERIALIZED_NAME_SEGMENTS_IDS = "segmentsIds";
  @SerializedName(SERIALIZED_NAME_SEGMENTS_IDS)
  private List<String> segmentsIds = null;


  public GenerateAudiencePerformanceReportRequestAttributes startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.
   * @return startDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public GenerateAudiencePerformanceReportRequestAttributes endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.
   * @return endDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public GenerateAudiencePerformanceReportRequestAttributes advertiserId(String advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * The advertiser id
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The advertiser id")

  public String getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public GenerateAudiencePerformanceReportRequestAttributes timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * The timezone used for the report. Timezone Database format (Tz).
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timezone used for the report. Timezone Database format (Tz).")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public GenerateAudiencePerformanceReportRequestAttributes dimension(DimensionEnum dimension) {
    
    this.dimension = dimension;
    return this;
  }

   /**
   * The dimension for the report.
   * @return dimension
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The dimension for the report.")

  public DimensionEnum getDimension() {
    return dimension;
  }


  public void setDimension(DimensionEnum dimension) {
    this.dimension = dimension;
  }


  public GenerateAudiencePerformanceReportRequestAttributes metrics(List<MetricsEnum> metrics) {
    
    this.metrics = metrics;
    return this;
  }

  public GenerateAudiencePerformanceReportRequestAttributes addMetricsItem(MetricsEnum metricsItem) {
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * The list of metrics to report.
   * @return metrics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of metrics to report.")

  public List<MetricsEnum> getMetrics() {
    return metrics;
  }


  public void setMetrics(List<MetricsEnum> metrics) {
    this.metrics = metrics;
  }


  public GenerateAudiencePerformanceReportRequestAttributes currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The currency used for the report. ISO 4217 code (three-letter capitals).
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The currency used for the report. ISO 4217 code (three-letter capitals).")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public GenerateAudiencePerformanceReportRequestAttributes adSetIds(List<String> adSetIds) {
    
    this.adSetIds = adSetIds;
    return this;
  }

  public GenerateAudiencePerformanceReportRequestAttributes addAdSetIdsItem(String adSetIdsItem) {
    if (this.adSetIds == null) {
      this.adSetIds = new ArrayList<>();
    }
    this.adSetIds.add(adSetIdsItem);
    return this;
  }

   /**
   * The list of adSets ids. If empty, all the adSets will be fetched.
   * @return adSetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of adSets ids. If empty, all the adSets will be fetched.")

  public List<String> getAdSetIds() {
    return adSetIds;
  }


  public void setAdSetIds(List<String> adSetIds) {
    this.adSetIds = adSetIds;
  }


  public GenerateAudiencePerformanceReportRequestAttributes audienceIds(List<String> audienceIds) {
    
    this.audienceIds = audienceIds;
    return this;
  }

  public GenerateAudiencePerformanceReportRequestAttributes addAudienceIdsItem(String audienceIdsItem) {
    if (this.audienceIds == null) {
      this.audienceIds = new ArrayList<>();
    }
    this.audienceIds.add(audienceIdsItem);
    return this;
  }

   /**
   * The list of Audiences ids. If empty, all the Audiences will be fetched
   * @return audienceIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of Audiences ids. If empty, all the Audiences will be fetched")

  public List<String> getAudienceIds() {
    return audienceIds;
  }


  public void setAudienceIds(List<String> audienceIds) {
    this.audienceIds = audienceIds;
  }


  public GenerateAudiencePerformanceReportRequestAttributes segmentsIds(List<String> segmentsIds) {
    
    this.segmentsIds = segmentsIds;
    return this;
  }

  public GenerateAudiencePerformanceReportRequestAttributes addSegmentsIdsItem(String segmentsIdsItem) {
    if (this.segmentsIds == null) {
      this.segmentsIds = new ArrayList<>();
    }
    this.segmentsIds.add(segmentsIdsItem);
    return this;
  }

   /**
   * The list of Segments ids. If empty, all the segments will be fetched
   * @return segmentsIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of Segments ids. If empty, all the segments will be fetched")

  public List<String> getSegmentsIds() {
    return segmentsIds;
  }


  public void setSegmentsIds(List<String> segmentsIds) {
    this.segmentsIds = segmentsIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateAudiencePerformanceReportRequestAttributes generateAudiencePerformanceReportRequestAttributes = (GenerateAudiencePerformanceReportRequestAttributes) o;
    return Objects.equals(this.startDate, generateAudiencePerformanceReportRequestAttributes.startDate) &&
        Objects.equals(this.endDate, generateAudiencePerformanceReportRequestAttributes.endDate) &&
        Objects.equals(this.advertiserId, generateAudiencePerformanceReportRequestAttributes.advertiserId) &&
        Objects.equals(this.timezone, generateAudiencePerformanceReportRequestAttributes.timezone) &&
        Objects.equals(this.dimension, generateAudiencePerformanceReportRequestAttributes.dimension) &&
        Objects.equals(this.metrics, generateAudiencePerformanceReportRequestAttributes.metrics) &&
        Objects.equals(this.currency, generateAudiencePerformanceReportRequestAttributes.currency) &&
        Objects.equals(this.adSetIds, generateAudiencePerformanceReportRequestAttributes.adSetIds) &&
        Objects.equals(this.audienceIds, generateAudiencePerformanceReportRequestAttributes.audienceIds) &&
        Objects.equals(this.segmentsIds, generateAudiencePerformanceReportRequestAttributes.segmentsIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, endDate, advertiserId, timezone, dimension, metrics, currency, adSetIds, audienceIds, segmentsIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateAudiencePerformanceReportRequestAttributes {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    adSetIds: ").append(toIndentedString(adSetIds)).append("\n");
    sb.append("    audienceIds: ").append(toIndentedString(audienceIds)).append("\n");
    sb.append("    segmentsIds: ").append(toIndentedString(segmentsIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

