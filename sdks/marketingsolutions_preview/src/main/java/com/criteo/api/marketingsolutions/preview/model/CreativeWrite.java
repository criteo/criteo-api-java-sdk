/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.marketingsolutions.preview.model.AdaptiveWriteAttributes;
import com.criteo.api.marketingsolutions.preview.model.DynamicWriteAttributes;
import com.criteo.api.marketingsolutions.preview.model.HtmlTagWriteAttributes;
import com.criteo.api.marketingsolutions.preview.model.ImageWriteAttributes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Entity to create or update a creative
 */
@ApiModel(description = "Entity to create or update a creative")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreativeWrite {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_AD_SET_ID = "adSetId";
  @SerializedName(SERIALIZED_NAME_AD_SET_ID)
  private String adSetId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_DATASET_ID = "datasetId";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  public static final String SERIALIZED_NAME_IMAGE_WRITE_ATTRIBUTES = "imageWriteAttributes";
  @SerializedName(SERIALIZED_NAME_IMAGE_WRITE_ATTRIBUTES)
  private ImageWriteAttributes imageWriteAttributes;

  public static final String SERIALIZED_NAME_HTML_TAG_WRITE_ATTRIBUTES = "htmlTagWriteAttributes";
  @SerializedName(SERIALIZED_NAME_HTML_TAG_WRITE_ATTRIBUTES)
  private HtmlTagWriteAttributes htmlTagWriteAttributes;

  public static final String SERIALIZED_NAME_DYNAMIC_WRITE_ATTRIBUTES = "dynamicWriteAttributes";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_WRITE_ATTRIBUTES)
  private DynamicWriteAttributes dynamicWriteAttributes;

  public static final String SERIALIZED_NAME_ADAPTIVE_WRITE_ATTRIBUTES = "adaptiveWriteAttributes";
  @SerializedName(SERIALIZED_NAME_ADAPTIVE_WRITE_ATTRIBUTES)
  private AdaptiveWriteAttributes adaptiveWriteAttributes;


  public CreativeWrite name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the creative
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the creative")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreativeWrite adSetId(String adSetId) {
    
    this.adSetId = adSetId;
    return this;
  }

   /**
   * Ad set on which Creative will be applied
   * @return adSetId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Ad set on which Creative will be applied")

  public String getAdSetId() {
    return adSetId;
  }


  public void setAdSetId(String adSetId) {
    this.adSetId = adSetId;
  }


  public CreativeWrite description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the creative
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the creative")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreativeWrite format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * The format of the creative  You can use \&quot;Image\&quot;, \&quot; HtmlTag\&quot; or \&quot;Dynamic\&quot;
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The format of the creative  You can use \"Image\", \" HtmlTag\" or \"Dynamic\"")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  public CreativeWrite datasetId(String datasetId) {
    
    this.datasetId = datasetId;
    return this;
  }

   /**
   * Dataset linked to the Creative
   * @return datasetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dataset linked to the Creative")

  public String getDatasetId() {
    return datasetId;
  }


  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public CreativeWrite imageWriteAttributes(ImageWriteAttributes imageWriteAttributes) {
    
    this.imageWriteAttributes = imageWriteAttributes;
    return this;
  }

   /**
   * Get imageWriteAttributes
   * @return imageWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImageWriteAttributes getImageWriteAttributes() {
    return imageWriteAttributes;
  }


  public void setImageWriteAttributes(ImageWriteAttributes imageWriteAttributes) {
    this.imageWriteAttributes = imageWriteAttributes;
  }


  public CreativeWrite htmlTagWriteAttributes(HtmlTagWriteAttributes htmlTagWriteAttributes) {
    
    this.htmlTagWriteAttributes = htmlTagWriteAttributes;
    return this;
  }

   /**
   * Get htmlTagWriteAttributes
   * @return htmlTagWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HtmlTagWriteAttributes getHtmlTagWriteAttributes() {
    return htmlTagWriteAttributes;
  }


  public void setHtmlTagWriteAttributes(HtmlTagWriteAttributes htmlTagWriteAttributes) {
    this.htmlTagWriteAttributes = htmlTagWriteAttributes;
  }


  public CreativeWrite dynamicWriteAttributes(DynamicWriteAttributes dynamicWriteAttributes) {
    
    this.dynamicWriteAttributes = dynamicWriteAttributes;
    return this;
  }

   /**
   * Get dynamicWriteAttributes
   * @return dynamicWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynamicWriteAttributes getDynamicWriteAttributes() {
    return dynamicWriteAttributes;
  }


  public void setDynamicWriteAttributes(DynamicWriteAttributes dynamicWriteAttributes) {
    this.dynamicWriteAttributes = dynamicWriteAttributes;
  }


  public CreativeWrite adaptiveWriteAttributes(AdaptiveWriteAttributes adaptiveWriteAttributes) {
    
    this.adaptiveWriteAttributes = adaptiveWriteAttributes;
    return this;
  }

   /**
   * Get adaptiveWriteAttributes
   * @return adaptiveWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdaptiveWriteAttributes getAdaptiveWriteAttributes() {
    return adaptiveWriteAttributes;
  }


  public void setAdaptiveWriteAttributes(AdaptiveWriteAttributes adaptiveWriteAttributes) {
    this.adaptiveWriteAttributes = adaptiveWriteAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreativeWrite creativeWrite = (CreativeWrite) o;
    return Objects.equals(this.name, creativeWrite.name) &&
        Objects.equals(this.adSetId, creativeWrite.adSetId) &&
        Objects.equals(this.description, creativeWrite.description) &&
        Objects.equals(this.format, creativeWrite.format) &&
        Objects.equals(this.datasetId, creativeWrite.datasetId) &&
        Objects.equals(this.imageWriteAttributes, creativeWrite.imageWriteAttributes) &&
        Objects.equals(this.htmlTagWriteAttributes, creativeWrite.htmlTagWriteAttributes) &&
        Objects.equals(this.dynamicWriteAttributes, creativeWrite.dynamicWriteAttributes) &&
        Objects.equals(this.adaptiveWriteAttributes, creativeWrite.adaptiveWriteAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, adSetId, description, format, datasetId, imageWriteAttributes, htmlTagWriteAttributes, dynamicWriteAttributes, adaptiveWriteAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreativeWrite {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    adSetId: ").append(toIndentedString(adSetId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    imageWriteAttributes: ").append(toIndentedString(imageWriteAttributes)).append("\n");
    sb.append("    htmlTagWriteAttributes: ").append(toIndentedString(htmlTagWriteAttributes)).append("\n");
    sb.append("    dynamicWriteAttributes: ").append(toIndentedString(dynamicWriteAttributes)).append("\n");
    sb.append("    adaptiveWriteAttributes: ").append(toIndentedString(adaptiveWriteAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

