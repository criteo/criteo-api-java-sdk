/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.marketingsolutions.preview.model.DynamicWriteAttributes;
import com.criteo.api.marketingsolutions.preview.model.ImageWriteAttributes;
import com.criteo.api.marketingsolutions.preview.model.ThirdPartyHtmlWriteAttributes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Entity to create or update a creative
 */
@ApiModel(description = "Entity to create or update a creative")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreativeWrite {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_AD_SET_ID = "adSetId";
  @SerializedName(SERIALIZED_NAME_AD_SET_ID)
  private String adSetId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_PARTNER_ID = "partnerId";
  @SerializedName(SERIALIZED_NAME_PARTNER_ID)
  private String partnerId;

  public static final String SERIALIZED_NAME_IMAGE_WRITE_ATTRIBUTES = "imageWriteAttributes";
  @SerializedName(SERIALIZED_NAME_IMAGE_WRITE_ATTRIBUTES)
  private ImageWriteAttributes imageWriteAttributes;

  public static final String SERIALIZED_NAME_THIRD_PARTY_HTML_WRITE_ATTRIBUTES = "thirdPartyHtmlWriteAttributes";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_HTML_WRITE_ATTRIBUTES)
  private ThirdPartyHtmlWriteAttributes thirdPartyHtmlWriteAttributes;

  public static final String SERIALIZED_NAME_DYNAMIC_WRITE_ATTRIBUTES = "dynamicWriteAttributes";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_WRITE_ATTRIBUTES)
  private DynamicWriteAttributes dynamicWriteAttributes;


  public CreativeWrite name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the creative
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the creative")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreativeWrite adSetId(String adSetId) {
    
    this.adSetId = adSetId;
    return this;
  }

   /**
   * Ad set on which Creative will be applied
   * @return adSetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ad set on which Creative will be applied")

  public String getAdSetId() {
    return adSetId;
  }


  public void setAdSetId(String adSetId) {
    this.adSetId = adSetId;
  }


  public CreativeWrite description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the creative
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the creative")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreativeWrite type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the creative  You can use \&quot;Image\&quot;, \&quot; ThirdPartyHtml\&quot; or \&quot;Dynamic\&quot;
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the creative  You can use \"Image\", \" ThirdPartyHtml\" or \"Dynamic\"")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public CreativeWrite advertiserId(String advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * Advertiser linked to the Creative
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Advertiser linked to the Creative")

  public String getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public CreativeWrite partnerId(String partnerId) {
    
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Partner linked to the Creative
   * @return partnerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Partner linked to the Creative")

  public String getPartnerId() {
    return partnerId;
  }


  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public CreativeWrite imageWriteAttributes(ImageWriteAttributes imageWriteAttributes) {
    
    this.imageWriteAttributes = imageWriteAttributes;
    return this;
  }

   /**
   * Get imageWriteAttributes
   * @return imageWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImageWriteAttributes getImageWriteAttributes() {
    return imageWriteAttributes;
  }


  public void setImageWriteAttributes(ImageWriteAttributes imageWriteAttributes) {
    this.imageWriteAttributes = imageWriteAttributes;
  }


  public CreativeWrite thirdPartyHtmlWriteAttributes(ThirdPartyHtmlWriteAttributes thirdPartyHtmlWriteAttributes) {
    
    this.thirdPartyHtmlWriteAttributes = thirdPartyHtmlWriteAttributes;
    return this;
  }

   /**
   * Get thirdPartyHtmlWriteAttributes
   * @return thirdPartyHtmlWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThirdPartyHtmlWriteAttributes getThirdPartyHtmlWriteAttributes() {
    return thirdPartyHtmlWriteAttributes;
  }


  public void setThirdPartyHtmlWriteAttributes(ThirdPartyHtmlWriteAttributes thirdPartyHtmlWriteAttributes) {
    this.thirdPartyHtmlWriteAttributes = thirdPartyHtmlWriteAttributes;
  }


  public CreativeWrite dynamicWriteAttributes(DynamicWriteAttributes dynamicWriteAttributes) {
    
    this.dynamicWriteAttributes = dynamicWriteAttributes;
    return this;
  }

   /**
   * Get dynamicWriteAttributes
   * @return dynamicWriteAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynamicWriteAttributes getDynamicWriteAttributes() {
    return dynamicWriteAttributes;
  }


  public void setDynamicWriteAttributes(DynamicWriteAttributes dynamicWriteAttributes) {
    this.dynamicWriteAttributes = dynamicWriteAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreativeWrite creativeWrite = (CreativeWrite) o;
    return Objects.equals(this.name, creativeWrite.name) &&
        Objects.equals(this.adSetId, creativeWrite.adSetId) &&
        Objects.equals(this.description, creativeWrite.description) &&
        Objects.equals(this.type, creativeWrite.type) &&
        Objects.equals(this.advertiserId, creativeWrite.advertiserId) &&
        Objects.equals(this.partnerId, creativeWrite.partnerId) &&
        Objects.equals(this.imageWriteAttributes, creativeWrite.imageWriteAttributes) &&
        Objects.equals(this.thirdPartyHtmlWriteAttributes, creativeWrite.thirdPartyHtmlWriteAttributes) &&
        Objects.equals(this.dynamicWriteAttributes, creativeWrite.dynamicWriteAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, adSetId, description, type, advertiserId, partnerId, imageWriteAttributes, thirdPartyHtmlWriteAttributes, dynamicWriteAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreativeWrite {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    adSetId: ").append(toIndentedString(adSetId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    imageWriteAttributes: ").append(toIndentedString(imageWriteAttributes)).append("\n");
    sb.append("    thirdPartyHtmlWriteAttributes: ").append(toIndentedString(thirdPartyHtmlWriteAttributes)).append("\n");
    sb.append("    dynamicWriteAttributes: ").append(toIndentedString(dynamicWriteAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

