/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An ad is the binding that connects a creative with an ad set
 */
@ApiModel(description = "An ad is the binding that connects a creative with an ad set")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Ad {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CREATIVE_ID = "creativeId";
  @SerializedName(SERIALIZED_NAME_CREATIVE_ID)
  private String creativeId;

  public static final String SERIALIZED_NAME_AD_SET_ID = "adSetId";
  @SerializedName(SERIALIZED_NAME_AD_SET_ID)
  private String adSetId;

  /**
   * The inventory the Ad belongs to. Possible values are \&quot;Display\&quot; and \&quot;Native\&quot;. This is optional since this doesn&#39;t make sense for every creative type but will throw an error if not set for a dynamic creative.
   */
  @JsonAdapter(InventoryTypeEnum.Adapter.class)
  public enum InventoryTypeEnum {
    NATIVE("Native"),
    
    DISPLAY("Display"),
    
    VIDEO("Video");

    private String value;

    InventoryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InventoryTypeEnum fromValue(String value) {
      for (InventoryTypeEnum b : InventoryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InventoryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InventoryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InventoryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InventoryTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVENTORY_TYPE = "inventoryType";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TYPE)
  private InventoryTypeEnum inventoryType;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;


  public Ad name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the ad
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the ad")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Ad description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the ad
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the ad")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Ad creativeId(String creativeId) {
    
    this.creativeId = creativeId;
    return this;
  }

   /**
   * The id of the Creative binded to this Ad
   * @return creativeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the Creative binded to this Ad")

  public String getCreativeId() {
    return creativeId;
  }


  public void setCreativeId(String creativeId) {
    this.creativeId = creativeId;
  }


  public Ad adSetId(String adSetId) {
    
    this.adSetId = adSetId;
    return this;
  }

   /**
   * The id of the Ad Set binded to this Ad
   * @return adSetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the Ad Set binded to this Ad")

  public String getAdSetId() {
    return adSetId;
  }


  public void setAdSetId(String adSetId) {
    this.adSetId = adSetId;
  }


  public Ad inventoryType(InventoryTypeEnum inventoryType) {
    
    this.inventoryType = inventoryType;
    return this;
  }

   /**
   * The inventory the Ad belongs to. Possible values are \&quot;Display\&quot; and \&quot;Native\&quot;. This is optional since this doesn&#39;t make sense for every creative type but will throw an error if not set for a dynamic creative.
   * @return inventoryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The inventory the Ad belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative.")

  public InventoryTypeEnum getInventoryType() {
    return inventoryType;
  }


  public void setInventoryType(InventoryTypeEnum inventoryType) {
    this.inventoryType = inventoryType;
  }


  public Ad startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The date when the ad will be launched  String must be in ISO8601 format
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the ad will be launched  String must be in ISO8601 format")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public Ad endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever  String must be in ISO8601 format
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever  String must be in ISO8601 format")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ad ad = (Ad) o;
    return Objects.equals(this.name, ad.name) &&
        Objects.equals(this.description, ad.description) &&
        Objects.equals(this.creativeId, ad.creativeId) &&
        Objects.equals(this.adSetId, ad.adSetId) &&
        Objects.equals(this.inventoryType, ad.inventoryType) &&
        Objects.equals(this.startDate, ad.startDate) &&
        Objects.equals(this.endDate, ad.endDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, creativeId, adSetId, inventoryType, startDate, endDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ad {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creativeId: ").append(toIndentedString(creativeId)).append("\n");
    sb.append("    adSetId: ").append(toIndentedString(adSetId)).append("\n");
    sb.append("    inventoryType: ").append(toIndentedString(inventoryType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

