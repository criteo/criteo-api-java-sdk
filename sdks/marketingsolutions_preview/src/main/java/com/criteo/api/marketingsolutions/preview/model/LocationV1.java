/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.marketingsolutions.preview.model.PointOfInterestV1;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Settings to target users based on their location.
 */
@ApiModel(description = "Settings to target users based on their location.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LocationV1 {
  public static final String SERIALIZED_NAME_POINTS_OF_INTEREST = "pointsOfInterest";
  @SerializedName(SERIALIZED_NAME_POINTS_OF_INTEREST)
  private List<PointOfInterestV1> pointsOfInterest = null;

  public static final String SERIALIZED_NAME_RADIUS_IN_KM = "radiusInKm";
  @SerializedName(SERIALIZED_NAME_RADIUS_IN_KM)
  private Integer radiusInKm;

  /**
   * The kind of Location audience
   */
  @JsonAdapter(RegistryTypeEnum.Adapter.class)
  public enum RegistryTypeEnum {
    UNKNOWN("Unknown"),
    
    POINTOFINTEREST("PointOfInterest");

    private String value;

    RegistryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RegistryTypeEnum fromValue(String value) {
      for (RegistryTypeEnum b : RegistryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RegistryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegistryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RegistryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RegistryTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REGISTRY_TYPE = "registryType";
  @SerializedName(SERIALIZED_NAME_REGISTRY_TYPE)
  private RegistryTypeEnum registryType;


  public LocationV1 pointsOfInterest(List<PointOfInterestV1> pointsOfInterest) {
    
    this.pointsOfInterest = pointsOfInterest;
    return this;
  }

  public LocationV1 addPointsOfInterestItem(PointOfInterestV1 pointsOfInterestItem) {
    if (this.pointsOfInterest == null) {
      this.pointsOfInterest = new ArrayList<>();
    }
    this.pointsOfInterest.add(pointsOfInterestItem);
    return this;
  }

   /**
   * Reach users which have been historically located in the given coordinates
   * @return pointsOfInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reach users which have been historically located in the given coordinates")

  public List<PointOfInterestV1> getPointsOfInterest() {
    return pointsOfInterest;
  }


  public void setPointsOfInterest(List<PointOfInterestV1> pointsOfInterest) {
    this.pointsOfInterest = pointsOfInterest;
  }


  public LocationV1 radiusInKm(Integer radiusInKm) {
    
    this.radiusInKm = radiusInKm;
    return this;
  }

   /**
   * The expected maximum distance in kilometers between a user and a point of interest
   * @return radiusInKm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The expected maximum distance in kilometers between a user and a point of interest")

  public Integer getRadiusInKm() {
    return radiusInKm;
  }


  public void setRadiusInKm(Integer radiusInKm) {
    this.radiusInKm = radiusInKm;
  }


  public LocationV1 registryType(RegistryTypeEnum registryType) {
    
    this.registryType = registryType;
    return this;
  }

   /**
   * The kind of Location audience
   * @return registryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The kind of Location audience")

  public RegistryTypeEnum getRegistryType() {
    return registryType;
  }


  public void setRegistryType(RegistryTypeEnum registryType) {
    this.registryType = registryType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationV1 locationV1 = (LocationV1) o;
    return Objects.equals(this.pointsOfInterest, locationV1.pointsOfInterest) &&
        Objects.equals(this.radiusInKm, locationV1.radiusInKm) &&
        Objects.equals(this.registryType, locationV1.registryType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pointsOfInterest, radiusInKm, registryType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationV1 {\n");
    sb.append("    pointsOfInterest: ").append(toIndentedString(pointsOfInterest)).append("\n");
    sb.append("    radiusInKm: ").append(toIndentedString(radiusInKm)).append("\n");
    sb.append("    registryType: ").append(toIndentedString(registryType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

