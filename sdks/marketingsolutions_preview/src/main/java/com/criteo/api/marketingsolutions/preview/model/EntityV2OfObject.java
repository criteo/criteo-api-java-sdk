/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Generic Criteo API successful data model
 */
@ApiModel(description = "Generic Criteo API successful data model")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntityV2OfObject {
  /**
   * A string containing the entity type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CAMPAIGN("campaign"),
    
    ADSET("adset"),
    
    AD("ad"),
    
    ADVERTISER("advertiser"),
    
    AGENCY("agency"),
    
    AGENCYADVERTISERLINK("agencyAdvertiserLink"),
    
    AGENCYADVERTISERTRANSFERREQUEST("AgencyAdvertiserTransferRequest"),
    
    PUBLISHER("publisher"),
    
    ADDRESS("address"),
    
    CLIENT("client"),
    
    CONTACT("contact"),
    
    INDUSTRY("industry");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Object attributes;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private Object meta;

  public static final String SERIALIZED_NAME_RELATIONSHIPS = "relationships";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIPS)
  private Object relationships;


  public EntityV2OfObject type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * A string containing the entity type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "campaign", required = true, value = "A string containing the entity type")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public EntityV2OfObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A opaque string containing the unique Id of the entity
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A opaque string containing the unique Id of the entity")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EntityV2OfObject attributes(Object attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Generic Criteo API successful data model  While others may be computed e.g. lastChangedDate.  Computed attributes are only part of the read model and not part of the write model.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Generic Criteo API successful data model  While others may be computed e.g. lastChangedDate.  Computed attributes are only part of the read model and not part of the write model.")

  public Object getAttributes() {
    return attributes;
  }


  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  public EntityV2OfObject meta(Object meta) {
    
    this.meta = meta;
    return this;
  }

   /**
   * A meta object that contains application-specific metadata
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A meta object that contains application-specific metadata")

  public Object getMeta() {
    return meta;
  }


  public void setMeta(Object meta) {
    this.meta = meta;
  }


  public EntityV2OfObject relationships(Object relationships) {
    
    this.relationships = relationships;
    return this;
  }

   /**
   * Relationships with this entity
   * @return relationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Relationships with this entity")

  public Object getRelationships() {
    return relationships;
  }


  public void setRelationships(Object relationships) {
    this.relationships = relationships;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityV2OfObject entityV2OfObject = (EntityV2OfObject) o;
    return Objects.equals(this.type, entityV2OfObject.type) &&
        Objects.equals(this.id, entityV2OfObject.id) &&
        Objects.equals(this.attributes, entityV2OfObject.attributes) &&
        Objects.equals(this.meta, entityV2OfObject.meta) &&
        Objects.equals(this.relationships, entityV2OfObject.relationships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, attributes, meta, relationships);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityV2OfObject {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

