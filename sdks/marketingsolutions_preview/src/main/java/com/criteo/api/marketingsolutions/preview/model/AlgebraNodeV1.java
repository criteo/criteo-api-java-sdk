/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: Preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.marketingsolutions.preview.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Node in the audience algebra definition.
 */
@ApiModel(description = "Node in the audience algebra definition.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlgebraNodeV1 {
  public static final String SERIALIZED_NAME_AND = "and";
  @SerializedName(SERIALIZED_NAME_AND)
  private List<AlgebraNodeV1> and = null;

  public static final String SERIALIZED_NAME_OR = "or";
  @SerializedName(SERIALIZED_NAME_OR)
  private List<AlgebraNodeV1> or = null;

  public static final String SERIALIZED_NAME_NOT = "not";
  @SerializedName(SERIALIZED_NAME_NOT)
  private AlgebraNodeV1 not;

  public static final String SERIALIZED_NAME_AUDIENCE_SEGMENT_ID = "audienceSegmentId";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_SEGMENT_ID)
  private String audienceSegmentId;


  public AlgebraNodeV1 and(List<AlgebraNodeV1> and) {
    
    this.and = and;
    return this;
  }

  public AlgebraNodeV1 addAndItem(AlgebraNodeV1 andItem) {
    if (this.and == null) {
      this.and = new ArrayList<>();
    }
    this.and.add(andItem);
    return this;
  }

   /**
   * Get and
   * @return and
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlgebraNodeV1> getAnd() {
    return and;
  }


  public void setAnd(List<AlgebraNodeV1> and) {
    this.and = and;
  }


  public AlgebraNodeV1 or(List<AlgebraNodeV1> or) {
    
    this.or = or;
    return this;
  }

  public AlgebraNodeV1 addOrItem(AlgebraNodeV1 orItem) {
    if (this.or == null) {
      this.or = new ArrayList<>();
    }
    this.or.add(orItem);
    return this;
  }

   /**
   * Get or
   * @return or
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlgebraNodeV1> getOr() {
    return or;
  }


  public void setOr(List<AlgebraNodeV1> or) {
    this.or = or;
  }


  public AlgebraNodeV1 not(AlgebraNodeV1 not) {
    
    this.not = not;
    return this;
  }

   /**
   * Get not
   * @return not
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlgebraNodeV1 getNot() {
    return not;
  }


  public void setNot(AlgebraNodeV1 not) {
    this.not = not;
  }


  public AlgebraNodeV1 audienceSegmentId(String audienceSegmentId) {
    
    this.audienceSegmentId = audienceSegmentId;
    return this;
  }

   /**
   * Get audienceSegmentId
   * @return audienceSegmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAudienceSegmentId() {
    return audienceSegmentId;
  }


  public void setAudienceSegmentId(String audienceSegmentId) {
    this.audienceSegmentId = audienceSegmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlgebraNodeV1 algebraNodeV1 = (AlgebraNodeV1) o;
    return Objects.equals(this.and, algebraNodeV1.and) &&
        Objects.equals(this.or, algebraNodeV1.or) &&
        Objects.equals(this.not, algebraNodeV1.not) &&
        Objects.equals(this.audienceSegmentId, algebraNodeV1.audienceSegmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(and, or, not, audienceSegmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlgebraNodeV1 {\n");
    sb.append("    and: ").append(toIndentedString(and)).append("\n");
    sb.append("    or: ").append(toIndentedString(or)).append("\n");
    sb.append("    not: ").append(toIndentedString(not)).append("\n");
    sb.append("    audienceSegmentId: ").append(toIndentedString(audienceSegmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

