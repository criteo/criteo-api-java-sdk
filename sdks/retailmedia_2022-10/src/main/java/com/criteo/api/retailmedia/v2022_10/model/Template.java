/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: 2022-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.v2022_10.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.api.retailmedia.v2022_10.model.Section;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * A template for creating creatives.
 */
@ApiModel(description = "A template for creating creatives.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Template {
  /**
   * The kind of creative this template can be used to build.
   */
  @JsonAdapter(CreativeFormatEnum.Adapter.class)
  public enum CreativeFormatEnum {
    UNKNOWN("Unknown"),
    
    FLAGSHIP("FlagShip"),
    
    SHOWCASE("Showcase"),
    
    SPONSOREDPRODUCTS("SponsoredProducts"),
    
    BUTTERFLY("Butterfly"),
    
    BUNDLEBOOST("BundleBoost"),
    
    IAB("IAB"),
    
    CUSTOM("CUSTOM"),
    
    DISPLAYPANEL("DisplayPanel"),
    
    DIGITALSHELFTALKER("DigitalShelfTalker");

    private String value;

    CreativeFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreativeFormatEnum fromValue(String value) {
      for (CreativeFormatEnum b : CreativeFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CreativeFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreativeFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreativeFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CreativeFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CREATIVE_FORMAT = "creativeFormat";
  @SerializedName(SERIALIZED_NAME_CREATIVE_FORMAT)
  private CreativeFormatEnum creativeFormat;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RETAILER_ID = "retailerId";
  @SerializedName(SERIALIZED_NAME_RETAILER_ID)
  private Integer retailerId;

  public static final String SERIALIZED_NAME_SKU_COLLECTION_MIN = "skuCollectionMin";
  @SerializedName(SERIALIZED_NAME_SKU_COLLECTION_MIN)
  private Integer skuCollectionMin;

  public static final String SERIALIZED_NAME_SKU_COLLECTION_MAX = "skuCollectionMax";
  @SerializedName(SERIALIZED_NAME_SKU_COLLECTION_MAX)
  private Integer skuCollectionMax;

  public static final String SERIALIZED_NAME_SKU_PER_COLLECTION_MIN = "skuPerCollectionMin";
  @SerializedName(SERIALIZED_NAME_SKU_PER_COLLECTION_MIN)
  private Integer skuPerCollectionMin;

  public static final String SERIALIZED_NAME_SKU_PER_COLLECTION_MAX = "skuPerCollectionMax";
  @SerializedName(SERIALIZED_NAME_SKU_PER_COLLECTION_MAX)
  private Integer skuPerCollectionMax;

  public static final String SERIALIZED_NAME_DISPLAYABLE_SKUS_MAX = "displayableSkusMax";
  @SerializedName(SERIALIZED_NAME_DISPLAYABLE_SKUS_MAX)
  private Integer displayableSkusMax;

  public static final String SERIALIZED_NAME_ALL_COLLECTIONS_MANDATORY = "allCollectionsMandatory";
  @SerializedName(SERIALIZED_NAME_ALL_COLLECTIONS_MANDATORY)
  private Boolean allCollectionsMandatory;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_SECTIONS = "sections";
  @SerializedName(SERIALIZED_NAME_SECTIONS)
  private List<Section> sections = new ArrayList<>();


  public Template creativeFormat(CreativeFormatEnum creativeFormat) {
    
    this.creativeFormat = creativeFormat;
    return this;
  }

   /**
   * The kind of creative this template can be used to build.
   * @return creativeFormat
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The kind of creative this template can be used to build.")

  public CreativeFormatEnum getCreativeFormat() {
    return creativeFormat;
  }


  public void setCreativeFormat(CreativeFormatEnum creativeFormat) {
    this.creativeFormat = creativeFormat;
  }


  public Template name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the template
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the template")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Template retailerId(Integer retailerId) {
    
    this.retailerId = retailerId;
    return this;
  }

   /**
   * The retailer associated to the template
   * @return retailerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The retailer associated to the template")

  public Integer getRetailerId() {
    return retailerId;
  }


  public void setRetailerId(Integer retailerId) {
    this.retailerId = retailerId;
  }


  public Template skuCollectionMin(Integer skuCollectionMin) {
    
    this.skuCollectionMin = skuCollectionMin;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return skuCollectionMin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "TODO: what is it ?")

  public Integer getSkuCollectionMin() {
    return skuCollectionMin;
  }


  public void setSkuCollectionMin(Integer skuCollectionMin) {
    this.skuCollectionMin = skuCollectionMin;
  }


  public Template skuCollectionMax(Integer skuCollectionMax) {
    
    this.skuCollectionMax = skuCollectionMax;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return skuCollectionMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TODO: what is it ?")

  public Integer getSkuCollectionMax() {
    return skuCollectionMax;
  }


  public void setSkuCollectionMax(Integer skuCollectionMax) {
    this.skuCollectionMax = skuCollectionMax;
  }


  public Template skuPerCollectionMin(Integer skuPerCollectionMin) {
    
    this.skuPerCollectionMin = skuPerCollectionMin;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return skuPerCollectionMin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "TODO: what is it ?")

  public Integer getSkuPerCollectionMin() {
    return skuPerCollectionMin;
  }


  public void setSkuPerCollectionMin(Integer skuPerCollectionMin) {
    this.skuPerCollectionMin = skuPerCollectionMin;
  }


  public Template skuPerCollectionMax(Integer skuPerCollectionMax) {
    
    this.skuPerCollectionMax = skuPerCollectionMax;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return skuPerCollectionMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TODO: what is it ?")

  public Integer getSkuPerCollectionMax() {
    return skuPerCollectionMax;
  }


  public void setSkuPerCollectionMax(Integer skuPerCollectionMax) {
    this.skuPerCollectionMax = skuPerCollectionMax;
  }


  public Template displayableSkusMax(Integer displayableSkusMax) {
    
    this.displayableSkusMax = displayableSkusMax;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return displayableSkusMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TODO: what is it ?")

  public Integer getDisplayableSkusMax() {
    return displayableSkusMax;
  }


  public void setDisplayableSkusMax(Integer displayableSkusMax) {
    this.displayableSkusMax = displayableSkusMax;
  }


  public Template allCollectionsMandatory(Boolean allCollectionsMandatory) {
    
    this.allCollectionsMandatory = allCollectionsMandatory;
    return this;
  }

   /**
   * TODO: what is it ?
   * @return allCollectionsMandatory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "TODO: what is it ?")

  public Boolean getAllCollectionsMandatory() {
    return allCollectionsMandatory;
  }


  public void setAllCollectionsMandatory(Boolean allCollectionsMandatory) {
    this.allCollectionsMandatory = allCollectionsMandatory;
  }


  public Template createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The time at which the template was created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The time at which the template was created")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Template updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The time at which the template was updated
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The time at which the template was updated")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Template sections(List<Section> sections) {
    
    this.sections = sections;
    return this;
  }

  public Template addSectionsItem(Section sectionsItem) {
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * The sections holding various template variables
   * @return sections
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The sections holding various template variables")

  public List<Section> getSections() {
    return sections;
  }


  public void setSections(List<Section> sections) {
    this.sections = sections;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template template = (Template) o;
    return Objects.equals(this.creativeFormat, template.creativeFormat) &&
        Objects.equals(this.name, template.name) &&
        Objects.equals(this.retailerId, template.retailerId) &&
        Objects.equals(this.skuCollectionMin, template.skuCollectionMin) &&
        Objects.equals(this.skuCollectionMax, template.skuCollectionMax) &&
        Objects.equals(this.skuPerCollectionMin, template.skuPerCollectionMin) &&
        Objects.equals(this.skuPerCollectionMax, template.skuPerCollectionMax) &&
        Objects.equals(this.displayableSkusMax, template.displayableSkusMax) &&
        Objects.equals(this.allCollectionsMandatory, template.allCollectionsMandatory) &&
        Objects.equals(this.createdAt, template.createdAt) &&
        Objects.equals(this.updatedAt, template.updatedAt) &&
        Objects.equals(this.sections, template.sections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creativeFormat, name, retailerId, skuCollectionMin, skuCollectionMax, skuPerCollectionMin, skuPerCollectionMax, displayableSkusMax, allCollectionsMandatory, createdAt, updatedAt, sections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template {\n");
    sb.append("    creativeFormat: ").append(toIndentedString(creativeFormat)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    retailerId: ").append(toIndentedString(retailerId)).append("\n");
    sb.append("    skuCollectionMin: ").append(toIndentedString(skuCollectionMin)).append("\n");
    sb.append("    skuCollectionMax: ").append(toIndentedString(skuCollectionMax)).append("\n");
    sb.append("    skuPerCollectionMin: ").append(toIndentedString(skuPerCollectionMin)).append("\n");
    sb.append("    skuPerCollectionMax: ").append(toIndentedString(skuPerCollectionMax)).append("\n");
    sb.append("    displayableSkusMax: ").append(toIndentedString(displayableSkusMax)).append("\n");
    sb.append("    allCollectionsMandatory: ").append(toIndentedString(allCollectionsMandatory)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

