/*
 * Criteo API
 * Criteo publicly exposed API
 *
 * The version of the OpenAPI document: 2021-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.api.retailmedia.v2020_10.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Report Status Attributes
 */
@ApiModel(description = "Report Status Attributes")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReportStatusAttributes {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_FILE_SIZE_BYTES = "fileSizeBytes";
  @SerializedName(SERIALIZED_NAME_FILE_SIZE_BYTES)
  private Long fileSizeBytes;

  public static final String SERIALIZED_NAME_MD5_CHECKSUM = "md5Checksum";
  @SerializedName(SERIALIZED_NAME_MD5_CHECKSUM)
  private String md5Checksum;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_ROW_COUNT = "rowCount";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private Long rowCount;

  /**
   * One of \&quot;pending\&quot;, \&quot;success\&quot;, \&quot;failure\&quot;, or \&quot;expired\&quot;
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    
    SUCCESS("success"),
    
    FAILURE("failure"),
    
    EXPIRED("expired");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


  public ReportStatusAttributes createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp when the report started to execute
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp when the report started to execute")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ReportStatusAttributes expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Timestamp when the cached report will expire
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp when the cached report will expire")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public ReportStatusAttributes fileSizeBytes(Long fileSizeBytes) {
    
    this.fileSizeBytes = fileSizeBytes;
    return this;
  }

   /**
   * Total size of file, only populated on success
   * @return fileSizeBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total size of file, only populated on success")

  public Long getFileSizeBytes() {
    return fileSizeBytes;
  }


  public void setFileSizeBytes(Long fileSizeBytes) {
    this.fileSizeBytes = fileSizeBytes;
  }


  public ReportStatusAttributes md5Checksum(String md5Checksum) {
    
    this.md5Checksum = md5Checksum;
    return this;
  }

   /**
   * The MD5 checksum of the content, only populated on success
   * @return md5Checksum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The MD5 checksum of the content, only populated on success")

  public String getMd5Checksum() {
    return md5Checksum;
  }


  public void setMd5Checksum(String md5Checksum) {
    this.md5Checksum = md5Checksum;
  }


  public ReportStatusAttributes message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Failure message, only populated on failure
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Failure message, only populated on failure")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public ReportStatusAttributes rowCount(Long rowCount) {
    
    this.rowCount = rowCount;
    return this;
  }

   /**
   * Rows of data in report, only populated on success
   * @return rowCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rows of data in report, only populated on success")

  public Long getRowCount() {
    return rowCount;
  }


  public void setRowCount(Long rowCount) {
    this.rowCount = rowCount;
  }


  public ReportStatusAttributes status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * One of \&quot;pending\&quot;, \&quot;success\&quot;, \&quot;failure\&quot;, or \&quot;expired\&quot;
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "One of \"pending\", \"success\", \"failure\", or \"expired\"")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportStatusAttributes reportStatusAttributes = (ReportStatusAttributes) o;
    return Objects.equals(this.createdAt, reportStatusAttributes.createdAt) &&
        Objects.equals(this.expiresAt, reportStatusAttributes.expiresAt) &&
        Objects.equals(this.fileSizeBytes, reportStatusAttributes.fileSizeBytes) &&
        Objects.equals(this.md5Checksum, reportStatusAttributes.md5Checksum) &&
        Objects.equals(this.message, reportStatusAttributes.message) &&
        Objects.equals(this.rowCount, reportStatusAttributes.rowCount) &&
        Objects.equals(this.status, reportStatusAttributes.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, expiresAt, fileSizeBytes, md5Checksum, message, rowCount, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportStatusAttributes {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    fileSizeBytes: ").append(toIndentedString(fileSizeBytes)).append("\n");
    sb.append("    md5Checksum: ").append(toIndentedString(md5Checksum)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

